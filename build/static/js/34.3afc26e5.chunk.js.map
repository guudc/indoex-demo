{"version":3,"sources":["pages/Airdrop/verify-email.tsx","functions/user.js"],"names":["DashboardContainer","styled","div","SubmitButton","button","Title","h1","ErrorMessage","p","SuccessMessage","VerifyEmail","history","isAuthenticated","user","token","useState","success","setSuccess","loading","setLoading","error","setError","userData","setUserData","useEffect","a","axios","get","process","_id","headers","Authorization","response","data","fetchUser","sendVerifcation","e","preventDefault","sendVerification","email","then","console","log","verified","disabled","type","onClick","role","to","fetch","method","Accept","body","JSON","stringify","json","catch","err","activate","submitAirdrop","airdrop","updateMyAirdrop","id","deleteMyAirdrop","getMyAirdrops","getUserDetails","updatePassword","password"],"mappings":"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","file":"static/js/34.3afc26e5.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport axios from 'axios'\nimport styled from 'styled-components'\nimport { isAuthenticated } from '../../helper/auth'\nimport { sendVerification } from './../../functions/user'\nimport Loader from 'src/components/Loader'\n\ninterface Props {\n\ttitle: string\n\tchildren: React.ReactNode\n}\n\nconst DashboardContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tpadding: 20px;\n\t@media screen and (max-width: 600px) {\n\t\twidth: 100%;\n\t}\n`\n\nconst SubmitButton = styled.button`\n\twidth: 100%;\n\tcursor: pointer;\n\ttransition: all 0.5s ease;\n\tbackground-color: #7eb946;\n\tcolor: #212121;\n\tfont-size: 1rem;\n\tpadding: 0.5rem 1rem;\n\tborder: none;\n\tborder-radius: 5px;\n\t&:hover {\n\t\tbackground-color: #212121;\n\t\tcolor: #eaeaea;\n\t}\n`\n\nconst Title = styled.h1`\n\tfont-size: 20px;\n\tmargin-bottom: 20px;\n\t@media screen and (max-width: 600px) {\n\t\twidth: 100%;\n\t}\n`\nconst ErrorMessage = styled.p`\n\tfont-size: 1rem;\n\tcolor: #f44336;\n`\n\nconst SuccessMessage = styled.p`\n\tfont-size: 1rem;\n\tcolor: #4caf50;\n`\n\nconst VerifyEmail: React.FC<Props> = ({ history }: any) => {\n\tconst { user, token } = isAuthenticated()\n\tconst [success, setSuccess] = useState('')\n\tconst [loading, setLoading] = useState(false)\n\tconst [error, setError] = useState('')\n\tconst [userData, setUserData] = useState(null);\n\n    useEffect(() => {\n\t\tconst fetchUser = async () => {\n\t\t  const response = await \n\t\t  axios.get(`${process.env.REACT_APP_BACKEND_API}/me/${user._id}`,\n\t\t\t{\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${user.token}`,\n\t\t\t},\n\t\t\t}\n\t\t\t);\n\t\t  setUserData(response.data.user);\n\t\t};\n\t\tfetchUser();\n\t  }, []);\n\n\tconst sendVerifcation = (e) => {\n\t\te.preventDefault()\n\t\tsetLoading(true)\n\t\tsendVerification(token, { email: userData.email }).then((data) => {\n\t\t\tif (data.error) {\n\t\t\t\tconsole.log(data.error)\n\t\t\t\tsetError(data.error)\n\t\t\t\tsetLoading(false)\n\t\t\t} else {\n\t\t\t\tsetLoading(false)\n\t\t\t\tsetSuccess('New verification link has been sent to your email. Please check your email to verify your account')\n\t\t\t}\n\t\t})\n\t}\n\n\treturn (\n\t\t<DashboardContainer>\n            <>\n                <Title>Welcome, {user && userData && userData.email}. Please activate your account</Title>\n                {user && userData && userData.verified == false ? (\n                    <>\n                        {loading ? (\n                            <SubmitButton disabled type=\"submit\" onClick={sendVerifcation}>\n                                Processing<Loader/>\n                            </SubmitButton>\n                        ) : (\n                            <SubmitButton type=\"submit\" onClick={sendVerifcation}>\n                                Resend Verificatin Email\n                            </SubmitButton>\n                        )}\n                    </>\n                ) : <>\n                {user && userData && userData.role !== 'user' ? <Redirect to=\"/admin/dashboard\" /> : <Redirect to=\"/dashboard\" /> }\n                </>}\n                <br />\n                {success ? <SuccessMessage>{success}</SuccessMessage> : null}\n                {error ? <ErrorMessage>{error}</ErrorMessage> : null}\n            </>\n\t\t</DashboardContainer>\n\t)\n}\n\nexport default VerifyEmail\n","export const sendVerification = (token, user) => {\n\n\treturn fetch(`${process.env.REACT_APP_BACKEND_API}/sendVerification`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\tAuthorization: `Bearer ${token}`\n\t\t},\n\t\tbody: JSON.stringify(user)\n\t})\n\t\t.then((response) => {\n\t\t\treturn response.json()\n\t\t})\n\t\t.catch((err) => console.log(err))\n}\nexport const activate = (token, user) => {\n\n\treturn fetch(`${process.env.REACT_APP_BACKEND_API}/activate`, {\n\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\tAuthorization: `Bearer ${token}`\n\t\t},\n\t\tbody: JSON.stringify(user)\n\t})\n\t\t.then((response) => {\n\t\t\treturn response.json()\n\t\t})\n\t\t.catch((err) => console.log(err))\n}\nexport const submitAirdrop = (token, airdrop) => {\n\n\treturn fetch(`${process.env.REACT_APP_BACKEND_API}/submit-airdrop`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\tAuthorization: `Bearer ${token}`\n\t\t},\n\t\tbody: JSON.stringify(airdrop)\n\t})\n\t\t.then((response) => {\n\t\t\treturn response.json()\n\t\t})\n\t\t.catch((err) => console.log(err))\n}\n\nexport const updateMyAirdrop = (id, token, airdrop) => {\n\n\treturn fetch(`${process.env.REACT_APP_BACKEND_API}/update/airdrop/${id}`, {\n\t\tmethod: 'PUT',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\tAuthorization: `Bearer ${token}`\n\t\t},\n\t\tbody: JSON.stringify(airdrop)\n\t})\n\t\t.then((response) => {\n\t\t\treturn response.json()\n\t\t})\n\t\t.catch((err) => console.log(err))\n}\nexport const deleteMyAirdrop = (id, token) => {\n\n\treturn fetch(`${process.env.REACT_APP_BACKEND_API}/delete/airdrop/${id}`, {\n\t\tmethod: 'DELETE',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\tAuthorization: `Bearer ${token}`\n\t\t}\n\t})\n\t\t.then((response) => {\n\t\t\treturn response.json()\n\t\t})\n\t\t.catch((err) => console.log(err))\n}\n\nexport const getMyAirdrops = (token) => {\n\n\treturn fetch(`${process.env.REACT_APP_BACKEND_API}/my-airdrops`, {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\tAuthorization: `Bearer ${token}`\n\t\t}\n\t})\n\t\t.then((response) => {\n\t\t\treturn response.json()\n\t\t})\n\t\t.catch((err) => console.log(err))\n}\n\nexport const getUserDetails = (token) => {\n\n\treturn fetch(`${process.env.REACT_APP_BACKEND_API}/me`, {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\tAuthorization: `Bearer ${token}`\n\t\t}\n\t})\n\t\t.then((response) => {\n\t\t\treturn response.json()\n\t\t})\n\t\t.catch((err) => console.log(err))\n}\nexport const updatePassword = (token, password) => {\n\n\treturn fetch(`${process.env.REACT_APP_BACKEND_API}/updatePassword`, {\n\t\tmethod: 'PUT',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\tAuthorization: `Bearer ${token}`\n\t\t},\n\t\tbody: JSON.stringify(password)\n\t})\n\t\t.then((response) => {\n\t\t\treturn response.json()\n\t\t})\n\t\t.catch((err) => console.log(err))\n}\n"],"sourceRoot":""}