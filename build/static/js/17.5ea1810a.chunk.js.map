{"version":3,"sources":["pages/Airdrop/index.tsx","api/shared.ts","api/utils/index.js","api/protocols/utils.ts","pages/Airdrop/images/jumbotron.jpeg","api/index.ts","api/protocols/index.ts"],"names":["AirdropContainer","styled","div","AirdropTop","jumbotronImg","AirdropBody","Airdrops","Card","theme","bg1","bg2","SubmitButton","button","CardImage","CardMeta","CardDetails","exclude","Airdrop","history","useState","airdrops","state","setState","user","isAuthenticated","perPage","size","setSize","current","setCurrent","loading","setLoading","getStaticProps","a","getSimpleProtocolsPageData","basicPropertiesToKeep","protocolsRaw","protocols","filter","token","symbol","includes","name","map","p","listedAt","sort","b","protocol","url","process","fetch","response","json","data","props","chainList","chains","revalidate","hasAirdrops","length","useEffect","numFor","Intl","NumberFormat","style","display","marginBottom","to","type","cursor","marginLeft","onClick","signout","push","pageSize","slice","getData","index","key","src","logo","alt","category","format","tvl","_id","className","showTotal","total","range","onChange","page","showSizeChanger","itemRender","originalElement","onShowSizeChange","value","newPerPage","Math","ceil","keepNeededProperties","propertiesToKeep","reduce","obj","prop","undefined","BigNumber","set","EXPONENTIAL_AT","dayjs","extend","utc","currency","minimumFractionDigits","getPercentChange","valueNow","value24HoursAgo","adjustedPercentChange","parseFloat","isNaN","isFinite","formatProtocolsData","chain","oracle","fork","protocolProps","removeBridges","toFilter","oracles","forkedFrom","toLowerCase","chainTvls","tvlPrevDay","tvlPrevWeek","tvlPrevMonth","extraTvl","change_1d","change_7d","change_1m","mcaptvl","mcap","Object","entries","forEach","sectionName","sectionTvl","startsWith","sectionToAdd","split","firstChar","module","exports","next22Minutedate","minutesForRollover","dt","Date","setMinutes","setHours","getHours","now","secondsTillRevalidation","getTime","getProtocolsRaw","PROTOCOLS_API","then","r","propsToKeep","filteredProtocols"],"mappings":"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","file":"static/js/17.5ea1810a.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect, PureComponent } from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport jumbotronImg from './images/jumbotron.jpeg'\nimport { revalidate } from '../../api'\nimport { getSimpleProtocolsPageData } from '../../api/protocols'\nimport { basicPropertiesToKeep } from '../../api/protocols/utils'\nimport Pagination from 'rc-pagination'\nimport { isAuthenticated, signout } from './../../helper/auth'\n\nimport './style.css'\nimport Loader from 'src/components/Loader'\n\nconst AirdropContainer = styled.div`\n\twidth: 100%;\n\tmin-height: 100vh;\n\tmargin-top: -50px;\n`\n\nconst AirdropTop = styled.div`\n\tbackground-image: url(${jumbotronImg});\n\tbackground-position: center;\n\tbackground-repeat: no-repeat;\n\tbackground-size: cover;\n\twidth: 100%;\n\tmin-height: 45vh;\n`\n\nconst AirdropBody = styled.div`\n\twidth: 100%;\n\tpadding: 30px;\n\tdisplay: flex;\n\talign-items: center;\n\tflex-direction: column;\n\tpadding-bottom: 60px;\n\n\t& h2 {\n\t\ttext-transform: uppercase;\n\t\tmargin-top: 40px;\n\t\tfont-weight: bolder;\n\t\tfont-size: 2rem;\n\t\tletter-spacing: 1px;\n\t\tmargin-bottom: 80px;\n\t}\n\n\t& .pagination-data {\n\t\tpadding: 0;\n\t\tmargin: 0;\n\t\twidth: 100%;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tmargin-block: 70px;\n\t}\n`\n\nconst Airdrops = styled.div`\n\twidth: calc(100% - 2rem, 1000px);\n\tdisplay: grid;\n\tgrid-template-columns: repeat(3, 1fr);\n\tmargin-inline: auto;\n\tgap: 40px;\n\n\t@media screen and (max-width: 1035px) {\n\t\tgrid-template-columns: repeat(2, 1fr);\n\t}\n\t@media screen and (max-width: 695px) {\n\t\tgrid-template-columns: 1fr;\n\t}\n`\nconst Card = styled.div`\n\tbackground-color: ${({ theme }) => theme.bg1};\n\tborder: 1px solid ${({ theme }) => theme.bg2};\n\tborder-radius: 10px;\n\tposition: relative;\n\tpadding: 20px;\n\tpadding-bottom: 10px;\n\talign-items: center;\n\tmin-width: 300px;\n\tmax-width: 400px;\n\tcursor: pointer;\n\tdisplay: block;\n\tcolor: #fff;\n`\n\nconst SubmitButton = styled.button`\n\twidth: 100%;\n\tcursor: pointer;\n\ttransition: all 0.5s ease;\n\tbackground-color: #7eb946;\n\tcolor: #212121;\n\tfont-size: 1rem;\n\tpadding: 0.5rem 1rem;\n\tborder: none;\n\tborder-radius: 5px;\n\t&:hover {\n\t\tbackground-color: #212121;\n\t\tcolor: #eaeaea;\n\t}\n`\n\nconst CardImage = styled.div`\n\t& img {\n\t\twidth: 100%;\n\t\tmax-width: 100px;\n\t\theight: auto;\n\t\tborder-radius: 50%;\n\t\tmargin-top: 5px;\n\t}\n`\n\nconst CardMeta = styled.div`\n\tdisplay: block;\n`\nconst CardDetails = styled.div`\n\tdisplay: flex;\n\n\t& span {\n\t\talign-items: center;\n\t\tfont-size: 0.9rem;\n\t\tmargin-left: 20px;\n\t\tpadding-bottom: 10px;\n\t}\n\n\t& h5 {\n\t\tfont-size: 18px;\n\t\tfont-weight: 600;\n\t}\n\n\t& button {\n\t\tbackground-color: #539933;\n\t\tcolor: #fff;\n\t\tborder: none;\n\t\toutline: none;\n\t\tpadding: 5px;\n\t\tborder-radius: 25px;\n\t\tcursor: pointer;\n\t}\n`\n\nconst Tag = styled.div<TagProps>`\n\tposition: absolute;\n\tpadding: 10px 15px;\n\ttop: 0;\n\tright: 0;\n\tborder-radius: 20px 20px 0px 20px;\n\tbackground-color: #bf9140;\n\tfont-size: 0.95rem;\n\ttext-transform: capitalize;\n`\n\nconst exclude = [\n\t'DeerFi',\n\t'FireDAO',\n\t'Robo-Advisor for Yield',\n\t'SenpaiSwap',\n\t'Zunami Protocol',\n\t'NowSwap',\n\t'NeoBurger',\n\t'MochiFi',\n\t'StakeHound',\n\t'Mento',\n\t'Lightning Network',\n\t'Secret Bridge',\n\t'Karura Swap',\n\t'Karura Liquid-Staking',\n\t'Karura Dollar (kUSD)',\n\t'Tezos Liquidity Baking',\n\t'Notional',\n\t'Tinlake',\n\t'Kuu Finance'\n]\n\ninterface TagProps {\n\treadonly $type: string\n}\n\nconst Airdrop: React.FC = ({ history }: any) => {\n\tconst [state, setState] = useState({\n\t\tairdrops: []\n\t} as any)\n\tconst { user } = isAuthenticated()\n\n\tconst [perPage, setPerPage] = useState(9)\n\tconst [size, setSize] = useState(perPage)\n\tconst [current, setCurrent] = useState(1)\n\tconst [loading, setLoading] = useState(true)\n\tconst [key, setKey] = useState(1)\n\n\tconst getStaticProps = async () => {\n\t\tconst protocolsRaw = await getSimpleProtocolsPageData([\n\t\t\t...basicPropertiesToKeep,\n\t\t\t'extraTvl',\n\t\t\t'listedAt',\n\t\t\t'chainTvls'\n\t\t])\n\n\t\tconst protocols = protocolsRaw.protocols\n\t\t\t.filter((token) => (token.symbol === null || token.symbol === '-') && !exclude.includes(token.name))\n\t\t\t.map((p) => ({ listedAt: 1624728920, ...p }))\n\t\t\t.sort((a, b) => b.listedAt - a.listedAt)\n\t\tconst airdrops = protocols.map((protocol) => protocol)\n\t\t// console.log(airdrops)\n\t\t// console.log('protocolsRaw: ', protocolsRaw)\n\t\tconst url = `${process.env.REACT_APP_BACKEND_API}/airdrops`\n\n\t\tconst response = await fetch(url)\n\t\tconst data = await response.json()\n\t\tif (airdrops || data) {\n\t\t\tsetState({ ...state, airdrops: [...data.airdrops, ...airdrops] })\n\t\t\tsetLoading(false)\n\t\t}\n\n\t\treturn {\n\t\t\tprops: {\n\t\t\t\tprotocols,\n\t\t\t\tchainList: protocolsRaw.chains\n\t\t\t},\n\t\t\trevalidate: revalidate()\n\t\t}\n\t}\n\n\tconst { airdrops } = state\n\tconst hasAirdrops = airdrops.length > 0\n\n\tuseEffect(() => {\n\t\tgetStaticProps()\n\t}, [getStaticProps])\n\n\tconst PerPageChange = (value) => {\n\t\tsetSize(value)\n\t\tconst newPerPage = Math.ceil(airdrops.length / value)\n\t\tif (current > newPerPage) {\n\t\t\tsetCurrent(newPerPage)\n\t\t}\n\t}\n\n\tconst getData = (current, pageSize) => {\n\t\treturn airdrops.slice((current - 1) * pageSize, current * pageSize)\n\t}\n\n\tconst PaginationChange = (page, pageSize) => {\n\t\tsetCurrent(page)\n\t\tsetSize(pageSize)\n\t}\n\n\tconst PrevNextArrow = (current, type, originalElement) => {\n\t\tif (type === 'prev') {\n\t\t\treturn (\n\t\t\t\t<button>\n\t\t\t\t\t<i className=\"fa fa-angle-double-left\"></i>\n\t\t\t\t</button>\n\t\t\t)\n\t\t}\n\t\tif (type === 'next') {\n\t\t\treturn (\n\t\t\t\t<button>\n\t\t\t\t\t<i className=\"fa fa-angle-double-right\"></i>\n\t\t\t\t</button>\n\t\t\t)\n\t\t}\n\t\treturn originalElement\n\t}\n\n\tconst numFor = Intl.NumberFormat('en-US')\n\n\treturn (\n\t\t<AirdropContainer>\n\t\t\t<AirdropTop />\n\t\t\t<AirdropBody>\n\t\t\t\t{user ? (\n\t\t\t\t\t<div style={{ display: 'flex', marginBottom: '50px' }}>\n\t\t\t\t\t\t<Link to=\"/dashboard\">\n\t\t\t\t\t\t\t<SubmitButton type=\"submit\">Dashboard</SubmitButton>\n\t\t\t\t\t\t</Link>\n\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\tstyle={{ cursor: 'pointer', marginLeft: '10px' }}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsignout(() => {\n\t\t\t\t\t\t\t\t\thistory.push('/airdrop')\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<SubmitButton type=\"submit\">Logout</SubmitButton>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<div style={{ display: 'flex', marginBottom: '50px' }}>\n\t\t\t\t\t\t<Link to=\"/register\">\n\t\t\t\t\t\t\t<SubmitButton type=\"submit\">Register</SubmitButton>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<Link to=\"/login\" style={{ marginLeft: '10px' }}>\n\t\t\t\t\t\t\t<SubmitButton type=\"submit\">Login</SubmitButton>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t{loading ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<h4>Loading latest airdrops...Please wait</h4>\n\t\t\t\t\t\t<Loader />\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<h2>Latest Airdrops</h2>\n\n\t\t\t\t\t\t{hasAirdrops ? (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Airdrops>\n\t\t\t\t\t\t\t\t\t{getData(current, size).map((data, index) => (\n\t\t\t\t\t\t\t\t\t\t<Card key={index}>\n\t\t\t\t\t\t\t\t\t\t\t<CardMeta>\n\t\t\t\t\t\t\t\t\t\t\t\t<CardDetails>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CardImage>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={data.logo} alt=\"Card Image\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</CardImage>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5>{data.name}</h5>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p>Category: {data.category}</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p>TVL: ${numFor.format(data.tvl)}</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to={`/airdrop/${data._id}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button>View Airdrop</button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</CardDetails>\n\t\t\t\t\t\t\t\t\t\t\t</CardMeta>\n\t\t\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</Airdrops>\n\t\t\t\t\t\t\t\t<Pagination\n\t\t\t\t\t\t\t\t\tclassName=\"pagination-data\"\n\t\t\t\t\t\t\t\t\tshowTotal={(total, range) => `Showing ${range[0]}-${range[1]} of ${total}`}\n\t\t\t\t\t\t\t\t\tonChange={PaginationChange}\n\t\t\t\t\t\t\t\t\ttotal={airdrops.length}\n\t\t\t\t\t\t\t\t\tcurrent={current}\n\t\t\t\t\t\t\t\t\tpageSize={size}\n\t\t\t\t\t\t\t\t\tshowSizeChanger={false}\n\t\t\t\t\t\t\t\t\titemRender={PrevNextArrow}\n\t\t\t\t\t\t\t\t\tonShowSizeChange={PerPageChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</AirdropBody>\n\t\t</AirdropContainer>\n\t)\n}\n\nexport default Airdrop\n","export function keepNeededProperties(protocol: {}, propertiesToKeep: string[]): any {\n  return propertiesToKeep.reduce((obj, prop) => {\n    if (protocol[prop] !== undefined) {\n      obj[prop] = protocol[prop]\n    }\n    return obj\n  }, {})\n}\n","import * as React from 'react'\nimport { BigNumber } from 'bignumber.js'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\nimport { Text } from 'rebass'\n// import Numeral from 'numeral'\nimport { timeframeOptions } from '../../constants'\nexport * from './blockExplorers'\n\nBigNumber.set({ EXPONENTIAL_AT: 50 })\ndayjs.extend(utc)\n\nexport function getTimeframe(timeWindow) {\n  const utcEndTime = dayjs.utc()\n  // based on window, get starttime\n  let utcStartTime\n  switch (timeWindow) {\n    case timeframeOptions.WEEK:\n      utcStartTime =\n        utcEndTime\n          .subtract(1, 'week')\n          .endOf('day')\n          .unix() - 1\n      break\n    case timeframeOptions.MONTH:\n      utcStartTime =\n        utcEndTime\n          .subtract(1, 'month')\n          .endOf('day')\n          .unix() - 1\n      break\n    case timeframeOptions.ALL_TIME:\n      utcStartTime =\n        utcEndTime\n          .subtract(1, 'year')\n          .endOf('day')\n          .unix() - 1\n      break\n    case timeframeOptions.YEAR:\n      utcStartTime =\n        utcEndTime\n          .subtract(1, 'year')\n          .endOf('day')\n          .unix() - 1\n      break\n    default:\n      utcStartTime =\n        utcEndTime\n          .subtract(1, 'year')\n          .startOf('year')\n          .unix() - 1\n      break\n  }\n  return utcStartTime\n}\n\nexport const toNiceDayAndHour = date => {\n  const x = dayjs.utc(dayjs.unix(date)).format('D MMM, HH:mm')\n  return x\n}\nexport const toNiceHour = date => {\n  const x = dayjs.utc(dayjs.unix(date)).format('HH:mm')\n  return x\n}\n\nexport const toNiceMonthlyDate = date => {\n  const x = dayjs.utc(dayjs.unix(date)).format('MMM YYYY')\n  return x\n}\n\nexport const toNiceDate = date => {\n  const x = dayjs.utc(dayjs.unix(date)).format('MMM DD')\n  return x\n}\n\nexport const toNiceCsvDate = date => {\n  const x = dayjs.utc(dayjs.unix(date)).format('DD/MM/YYYY')\n  return x\n}\n\nexport const toNiceDateYear = date => dayjs.utc(dayjs.unix(date)).format('MMMM DD, YYYY')\n\nexport const toK = num => {\n  return num\n}\n\n// using a currency library here in case we want to add more in future\nconst priceFormatter = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n  minimumFractionDigits: 2\n})\n\nexport const formattedNum = (number, symbol = false, acceptNegatives = false) => {\n  let currencySymbol\n  if (symbol === true) {\n    currencySymbol = '$'\n  } else if (symbol === false) {\n    currencySymbol = ''\n  } else {\n    currencySymbol = symbol\n  }\n  if (isNaN(number) || number === '' || number === undefined) {\n    return symbol ? `${currencySymbol}0` : 0\n  }\n  let num = parseFloat(number)\n  const isNegative = num < 0\n  num = Math.abs(num)\n\n  const currencyMark = isNegative ? `${currencySymbol}-` : currencySymbol\n  const normalMark = isNegative ? '-' : ''\n\n  if (num > 10000000) {\n    return (symbol ? currencyMark : normalMark) + toK(num.toFixed(0), true)\n  }\n\n  if (num === 0) {\n    return symbol ? `${currencySymbol}0` : 0\n  }\n\n  if (num < 0.0001 && num > 0) {\n    return symbol ? `< ${currencySymbol}0.0001` : '< 0.0001'\n  }\n\n  if (num > 1000) {\n    return symbol\n      ? currencyMark + Number(parseFloat(num).toFixed(0)).toLocaleString()\n      : normalMark + Number(parseFloat(num).toFixed(0)).toLocaleString()\n  }\n\n  if (symbol) {\n    if (num < 0.1) {\n      return currencyMark + Number(parseFloat(num).toFixed(4))\n    } else {\n      const usdString = priceFormatter.format(num)\n      return currencyMark + usdString.slice(1, usdString.length)\n    }\n  }\n\n  return Number(parseFloat(num).toFixed(5))\n}\n\nexport const formattedPeggedPrice = (number, symbol = false, acceptNegatives = false) => {\n  let currencySymbol\n  if (symbol === true) {\n    currencySymbol = '$'\n  } else if (symbol === false) {\n    currencySymbol = ''\n  } else {\n    currencySymbol = symbol\n  }\n  if (isNaN(number) || number === '' || number === undefined) {\n    return symbol ? `${currencySymbol}0` : 0\n  }\n  let num = parseFloat(number)\n  const isNegative = num < 0\n  num = Math.abs(num)\n\n  const currencyMark = isNegative ? `${currencySymbol}-` : currencySymbol\n  const normalMark = isNegative ? '-' : ''\n\n  if (num > 10000000) {\n    return (symbol ? currencyMark : normalMark) + toK(num.toFixed(0), true)\n  }\n\n  if (num === 0) {\n    return symbol ? `${currencySymbol}0` : 0\n  }\n\n  if (num < 0.0001 && num > 0) {\n    return symbol ? `< ${currencySymbol}0.0001` : '< 0.0001'\n  }\n\n  if (num > 1000) {\n    return symbol\n      ? currencyMark + Number(parseFloat(num).toFixed(0)).toLocaleString()\n      : normalMark + Number(parseFloat(num).toFixed(0)).toLocaleString()\n  }\n\n  if (symbol) {\n    return currencyMark + parseFloat(num).toFixed(5) // this is all pegged is using, should merge with above\n  }\n\n  return Number(parseFloat(num).toFixed(5))\n}\n\nexport const filterCollectionsByCurrency = (collections, displayUsd) =>\n  (collections &&\n    collections.length &&\n    collections.map(collection => ({\n      ...collection,\n      floor: displayUsd ? collection?.floorUSD : collection?.floor,\n      dailyVolume: displayUsd ? collection?.dailyVolumeUSD : collection?.dailyVolume,\n      totalVolume: displayUsd ? collection?.totalVolumeUSD : collection?.totalVolume\n    }))) ||\n  []\n\nexport function chainIconUrl(chain) {\n  return `/chain-icons/rsz_${chain.toLowerCase()}.jpg`\n}\n\nexport function tokenIconUrl(name) {\n  const x = name ?? ''\n  return `/icons/${x\n    .toLowerCase()\n    .split(' ')\n    .join('-')}.jpg`\n}\n\n/**\n * @param {string} symbol Asset symbol\n * @param {boolean} hd Return HD icon if true\n * @returns {string} URL to the asset icon\n */\nexport function assetIconUrl(symbol, hd = false) {\n  if (hd) {\n    return `/asset-icons/hd/${symbol.toLowerCase()}.png`\n  } else {\n    return `/asset-icons/${symbol.toLowerCase()}.png`\n  }\n}\n\nexport function peggedAssetIconUrl(name) {\n  return `/pegged-icons/${encodeURIComponent(\n    name\n      .toLowerCase()\n      .split(' ')\n      .join('-')\n  )}.jpg`\n}\n\nexport function formattedPercent(percent, noSign = false, fontWeight = 500) {\n  if (percent === null) {\n    return null\n  }\n\n  let up = 'green'\n  let down = 'red'\n\n  if (noSign) {\n    up = down = ''\n  }\n\n  percent = parseFloat(percent)\n  if (!percent || percent === 0) {\n    return <Text fontWeight={fontWeight}>0%</Text>\n  }\n\n  if (percent < 0.0001 && percent > 0) {\n    return (\n      <Text fontWeight={fontWeight} color={up}>\n        {'< 0.0001%'}\n      </Text>\n    )\n  }\n\n  if (percent < 0 && percent > -0.0001) {\n    return (\n      <Text fontWeight={fontWeight} color={down}>\n        {'< 0.0001%'}\n      </Text>\n    )\n  }\n\n  const fixedPercent = percent.toFixed(2)\n  if (fixedPercent === '0.00') {\n    return '0%'\n  }\n  const prefix = noSign ? '' : '+'\n  if (fixedPercent > 0) {\n    if (fixedPercent > 100) {\n      return <Text fontWeight={fontWeight} color={up}>{`${prefix}${percent?.toFixed(0).toLocaleString()}%`}</Text>\n    } else {\n      return <Text fontWeight={fontWeight} color={up}>{`${prefix}${fixedPercent}%`}</Text>\n    }\n  } else {\n    return <Text fontWeight={fontWeight} color={down}>{`${fixedPercent}%`}</Text>\n  }\n}\n\n/**\n * get standard percent change between two values\n * @param {*} valueNow\n * @param {*} value24HoursAgo\n */\nexport const getPercentChange = (valueNow, value24HoursAgo) => {\n  const adjustedPercentChange =\n    ((parseFloat(valueNow) - parseFloat(value24HoursAgo)) / parseFloat(value24HoursAgo)) * 100\n  if (isNaN(adjustedPercentChange) || !isFinite(adjustedPercentChange)) {\n    return null\n  }\n  return adjustedPercentChange\n}\n\nexport const capitalizeFirstLetter = word => word.charAt(0).toUpperCase() + word.slice(1)\n\nexport const standardizeProtocolName = (tokenName = '') =>\n  tokenName\n    .toLowerCase()\n    .split(' ')\n    .join('-')\n    .split(\"'\")\n    .join('')\n\nexport const slug = standardizeProtocolName\n\nexport function getRandomColor() {\n  const letters = '0123456789ABCDEF'\n  let color = '#'\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)]\n  }\n  return color\n}\n\nexport const getTokenDominance = (topToken, totalVolume) => {\n  const dominance = topToken.tvl && totalVolume && (topToken.tvl / totalVolume) * 100.0\n\n  if (dominance < 100) {\n    return dominance.toFixed(2)\n  } else return 100\n}\n\nexport const getPeggedDominance = (topToken, totalMcap) => {\n  const dominance = topToken.mcap && totalMcap && (topToken.mcap / totalMcap) * 100.0\n\n  if (dominance < 100) {\n    return dominance.toFixed(2)\n  } else return 100\n}\n\n/**\n * get tvl of specified day before last day using chart data\n * @param {*} chartData\n * @param {*} daysBefore\n */\nexport const getPrevTvlFromChart = (chart, daysBefore) => {\n  return chart[chart.length - 1 - daysBefore]?.[1] ?? null\n}\n\nexport const getPrevPeggedTotalFromChart = (chart, daysBefore, issuanceType, pegType = '') => {\n  const prevChart = chart[chart.length - 1 - daysBefore]\n  if (!prevChart) return null\n  if (!pegType) return Object.values(prevChart?.[issuanceType]).reduce((a, b) => a + b)\n  return prevChart?.[issuanceType]?.[pegType] ?? null\n}\n\nexport function download(filename, text) {\n  const element = document.createElement('a')\n  element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text))\n  element.setAttribute('download', filename)\n\n  element.style.display = 'none'\n  document.body.appendChild(element)\n\n  element.click()\n\n  document.body.removeChild(element)\n}\n","/* eslint-disable @typescript-eslint/camelcase */\nimport type { IFormattedProtocol, LiteProtocol } from '../types'\nimport { keepNeededProperties } from '../shared'\nimport { getPercentChange } from '../utils'\n\nexport type BasicPropsToKeep = (keyof IFormattedProtocol)[]\n\n// eslint-disable-next-line @typescript-eslint/interface-name-prefix\ninterface IFormatProtocolsData {\n\tchain?: string\n\toracle?: string\n\tfork?: string\n\tcategory?: string\n\tprotocols: LiteProtocol[]\n\tprotocolProps?: BasicPropsToKeep\n\tremoveBridges?: boolean\n}\n\nexport const basicPropertiesToKeep: BasicPropsToKeep = [\n\t'tvl',\n\t'name',\n\t'symbol',\n\t'chains',\n\t'tvlPrevDay',\n\t'tvlPrevWeek',\n\t'tvlPrevMonth',\n\t'change_1d',\n\t'change_7d',\n\t'change_1m',\n\t'mcap',\n\t'mcaptvl',\n\t'category',\n\t'parentProtocol',\n\t'logo',\n\t'url',\n\t'description'\n]\n\nexport const formatProtocolsData = ({\n\tchain = '',\n\toracle,\n\tfork,\n\tcategory = '',\n\tprotocols = [],\n\tprotocolProps = [...basicPropertiesToKeep, 'extraTvl'],\n\tremoveBridges = false\n}: IFormatProtocolsData) => {\n\tconst data: IFormattedProtocol[] = protocols\n\t\t.filter((protocol) => {\n\t\t\tlet toFilter = true\n\n\t\t\tif (removeBridges) {\n\t\t\t\ttoFilter = toFilter && protocol?.category !== 'Bridge'\n\t\t\t}\n\n\t\t\tif (chain) {\n\t\t\t\ttoFilter = toFilter && protocol.chains?.includes(chain)\n\t\t\t}\n\n\t\t\tif (oracle) {\n\t\t\t\ttoFilter = toFilter && protocol.oracles?.includes(oracle)\n\t\t\t}\n\n\t\t\tif (fork) {\n\t\t\t\ttoFilter = toFilter && protocol.forkedFrom?.includes(fork)\n\t\t\t}\n\n\t\t\tif (category) {\n\t\t\t\ttoFilter = toFilter && category.toLowerCase() === (protocol.category?.toLowerCase() ?? '')\n\t\t\t}\n\n\t\t\treturn toFilter\n\t\t})\n\t\t.map((p) => {\n\t\t\tconst protocol = keepNeededProperties(p, protocolProps)\n\n\t\t\tif (chain) {\n\t\t\t\tprotocol.tvl = p.chainTvls[chain]?.tvl ?? 0\n\t\t\t\tprotocol.tvlPrevDay = p.chainTvls[chain]?.tvlPrevDay ?? null\n\t\t\t\tprotocol.tvlPrevWeek = p.chainTvls[chain]?.tvlPrevWeek ?? null\n\t\t\t\tprotocol.tvlPrevMonth = p.chainTvls[chain]?.tvlPrevMonth ?? null\n\t\t\t}\n\n\t\t\tprotocol.extraTvl = {}\n\t\t\tprotocol.change_1d = getPercentChange(protocol.tvl, protocol.tvlPrevDay)\n\t\t\tprotocol.change_7d = getPercentChange(protocol.tvl, protocol.tvlPrevWeek)\n\t\t\tprotocol.change_1m = getPercentChange(protocol.tvl, protocol.tvlPrevMonth)\n\t\t\tprotocol.mcaptvl = p.mcap && protocol.tvl ? p.mcap / protocol.tvl : null\n\n\t\t\tObject.entries(p.chainTvls).forEach(([sectionName, sectionTvl]) => {\n\t\t\t\tif (chain) {\n\t\t\t\t\tif (sectionName.startsWith(`${chain}-`)) {\n\t\t\t\t\t\tconst sectionToAdd = sectionName.split('-')[1]\n\t\t\t\t\t\tprotocol.extraTvl[sectionToAdd] = sectionTvl\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst firstChar = sectionName[0]\n\t\t\t\t\tif (firstChar === firstChar.toLowerCase()) {\n\t\t\t\t\t\tprotocol.extraTvl[sectionName] = sectionTvl\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\treturn keepNeededProperties(protocol, protocolProps)\n\t\t})\n\n\treturn data.sort((a, b) => b.tvl - a.tvl)\n}\n","module.exports = __webpack_public_path__ + \"static/media/jumbotron.2910cbfc.jpeg\";","function next22Minutedate(minutesForRollover: number) {\n  const dt = new Date()\n  dt.setMinutes(minutesForRollover)\n  if (dt < new Date()) {\n    dt.setHours(dt.getHours() + 1)\n  }\n  return dt\n}\n\nexport function revalidate(minutesForRollover = 22) {\n  const current = Date.now()\n  const secondsTillRevalidation = Math.ceil((next22Minutedate(minutesForRollover).getTime() - current) / 1000)\n  return secondsTillRevalidation > 0 ? secondsTillRevalidation : 3600\n}\n","import { PROTOCOLS_API } from './../../constants/index'\n\nimport { BasicPropsToKeep, formatProtocolsData } from './utils'\n\nexport const getProtocolsRaw = () => fetch(PROTOCOLS_API).then((r: any) => r.json())\n\n// - used in /airdrops\nexport async function getSimpleProtocolsPageData(propsToKeep?: BasicPropsToKeep) {\n  const { protocols, chains } = await getProtocolsRaw()\n\n  const filteredProtocols = formatProtocolsData({\n    protocols,\n    protocolProps: propsToKeep\n  })\n  return { protocols: filteredProtocols, chains }\n}\n"],"sourceRoot":""}