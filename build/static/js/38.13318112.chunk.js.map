{"version":3,"sources":["pages/Stake/modify.tsx","pages/Stake/inner.tsx"],"names":["_balance","_pool","_ether","_account","_chainid","_wallet","_staked","rbalance","stakeId","pool","_liquidity","locked","_duration","hasSaved","SaveHooks","getInputValue","_id","_div","E","value","Save","useActiveWeb3React","account","chainId","library","toggleWalletModal","useWalletModalToggle","onToggle","_value","toLowerCase","hideSaveModal","_c","style","display","length","forEach","callback","onRender","owner","id","className","onClick","margin","fontSize","type","placeholder","marginLeft","border","Button","a","stake_edit_button","reset","err","setModalStaus","setModalMsg","readErrorMessage","hideModalInfo","disabled","innerHTML","showModalInfo","_Address","config","chains","_stakeAddress","stake","signer","getSigner","ethers","Contract","abi","liquid","toBig","rewardTokenInfo","decimal","tokenAddress","ZERO_ADDRESS","modifyStakePool","poolId","Web3","utils","toWei","then","_res","SavePool","tx","hash","wait","res","status","catch","_Option","_buttonAct","allTokens","viewNo","_withdrawAct","StakeStatsContainer","styled","div","props","theme","bg1And2","VotingAddresses","purple2","green1","selectView","_viewNo","_proposalViews","document","getElementById","i","children","stake_input","showConditionalDisplay","loadData","_data","getPoolWithIdAndUser","getStakeData","getUserBalance","stakeTokenInfo","bal","rbal","getAllowed","bol","ymsg","stake_coin_name","stake_head_stake_name","stake_coin_img","stake_head_stake_img","stake_head_earn_name","stake_head_earn_img","symbol","native","src","tokenInfo","logoURI","logo","formatNumber","stakers","totalStaked","Math","pow","reward","liquidity","_yield","yield","yieldType","yieldDuration","ended","Date","time","toLocaleDateString","weekday","year","month","day","setTimeout","alert","window","location","href","_address","token","balanceOf","getBalance","_tokenAddress","allowance","Promise","resolve","_amount","_stake","console","log","stakePool","unstake","setInputAmount","_amt","showEditPool","_toggleChild","stake_reward_button","stake_button","stake_amount","Intl","NumberFormat","maximumSignificantDigits","format","Stake","tokens","useAllTokens","useState","useEffect","G","JSON","stringify","_callback","push","background","padding","color","approve","grantPermission","func","withdraw","withdrawPool"],"mappings":"+HAc+BA,EAAgDC,EACnDC,EAAiBC,EAAkBC,E,ICE3DA,EAAmBC,EAAkBH,EACrCF,EAAmBM,EAAwCC,EACvCC,EACCC,E,+JDNrBC,EAAkB,IAA4BC,GAAkB,EAChEC,EAAiB,EACjBC,GAAoB,EACpBC,EAAiB,GAoCfC,EAAgB,SAACC,GACpB,IAAMC,EAAOC,YAAEF,GACf,OAAW,MAARC,EACQA,EAAKE,MAET,IAsCJC,EAAqB,WACvB,MAAsCC,cAA9BC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,QAASC,EAA1B,EAA0BA,QAC1BtB,EAASsB,EAAUrB,EAAWmB,EAAQlB,EAAWmB,EACjD,IAAME,EAAoBC,cACzBC,YAAS,mBAAmB,SAACC,GACWjB,EAAZ,UAAxBiB,EAAOC,iBAEZ,IA8CMC,EAAgB,WACpB,IAAMC,EAAKb,YAAE,cACJ,MAANa,IACDA,EAAGC,MAAMC,QAAU,OAEnBhC,EAAQ,KAAMD,EAAW,EAAGU,EAAa,EA1F5CI,EAAUoB,OAAS,GAAKrB,IACzBA,GAAW,EACTC,EAAUqB,SAAQ,SAACC,GACfA,OAEJvB,GAAW,KAmGjB,OATIwB,YAAS,cAAc,WACP,MAATpC,GACIA,EAAMqC,OAASnC,IAGbe,YAAE,cAAiCc,MAAMC,QAAU,WAK9D,oCAEE,yBAAKM,GAAG,aAAaC,UAAU,gBAAgBR,MAAO,CAACC,QAAQ,SAC5D,yBAAKO,UAAU,0BACb,yBAAKC,QAASX,EAAeU,UAAU,gBAAe,0BAAMA,UAAU,kBACtE,0BAAMA,UAAU,GAAGR,MAAO,CAACU,OAAO,OAAQC,SAAS,SAAnD,mBACA,yBAAKH,UAAU,uBACZ,6BAASA,UAAU,wBACf,0BAAMD,GAAG,kBAAkBC,UAAU,yBAArC,wBACA,6BACC,2BAAOD,GAAG,0BAA0BK,KAAK,SAASJ,UAAU,QAAQK,YAAY,YAEjF,0BAAMN,GAAG,qBAAqBC,UAAU,OAAxC,cAEJ,6BAASA,UAAU,wBACf,0BAAMA,UAAU,yBAAhB,gBACA,6BACE,yBAAKD,GAAG,kBAAkBC,UAAU,eAAeR,MAAO,CAACc,WAAW,SACpE,yBAAKN,UAAU,uBAAf,UACA,4CAIR,6BAASA,UAAU,wBACf,0BAAMA,UAAU,yBAAhB,2BACA,6BACC,2BAAOD,GAAG,uBAAuBK,KAAK,SAASJ,UAAU,QAAQK,YAAY,mBAGlF,6BAASL,UAAU,uBAAuBR,MAAO,CAACe,OAAO,QACpDzB,EAID,kBAAC0B,EAAA,EAAD,CAAeP,QApGR,WAEnB,IAAMQ,GAlEVvC,EAAcK,EAAc,2BAC5BH,EAAYG,EAAc,wBAET,EAAbL,EAA8B,EAAXV,EACZ,EAAC,EAAO,8DAEG,EAAbU,EAAkB,EAChB,EAAC,EAAO,uCAEE,EAAZE,EAAiB,EACf,EAAC,EAAO,qCAEZ,EAAC,IAuDEsC,EAAoBhC,YAAE,qBAoC5B,SAASiC,EAAMC,GACXC,YAAc,SACdC,YAAYC,YAAiBH,IAAMI,cACX,MAArBN,IAA4BA,EAAkBO,UAAW,GAC5DP,EAAkBQ,UAAY,OAvC/BT,EAAE,IACDC,EAAkBO,UAAW,EAAOP,EAAkBQ,UAAY,MAClEC,aAAc,GAAML,YAAY,eAAeD,YAAc,IAC3DH,EAAkBO,UAAW,EA3F1B,WACf,IAAIG,EAAgBC,IAAOC,OAAO1D,GAClC,GAAe,MAAZwD,EAAkB,CACnB,IAAIG,EAAqBH,EAASI,MAC5BC,EAAS/D,EAAOgE,YAChBF,EAAQ,IAAIG,SAAOC,SAASL,EAAeM,IAAIL,MAAOC,GAEtDK,EAASC,YAAM7D,EAAYT,EAAMuE,gBAAgBC,SAMvD,OALA7D,GAAwB,GAErBX,EAAMuE,gBAAgBE,cAAgBC,eACjCX,EAAMY,gBAAgB3E,EAAM4E,OAAOC,IAAKC,MAAMC,MAAMV,EAAS,GAAI,OAAQ3D,EAAOC,GAC7EoD,EAAMY,gBAAgB3E,EAAM4E,OAAOC,IAAKC,MAAMC,MAAMV,EAAS,GAAI,OAAQ3D,EAAOC,EAAW,CAACO,MAAO2D,IAAKC,MAAMC,MAAMV,EAAS,GAAI,UACnIW,MAAK,SAACC,GACX,OAAOA,KAGP,OAAO,EA2EDC,GACCF,MAAK,SAACG,GACFA,EAAGC,MACJD,EAAGE,OACFL,MAAK,SAACM,GACLrC,EAAkBO,UAAW,EAAOD,YAAc,KAClDN,EAAkBQ,UAAY,OACX,GAAd6B,EAAIC,QACLlC,YAAY,qBACZD,YAAc,QACdxC,GAAW,EACXiB,MAIAuB,YAAc,SAASC,YAAY,0BAGxCmC,OAAM,SAACrC,GACJD,EAAMC,SAIbqC,OAAM,SAACrC,GACND,EAAMC,QAIVO,aAAc,GAAMN,YAAc,SAASC,YAAYL,EAAE,IACzDO,YAAc,OA+DkCjB,GAAG,qBAA3C,QAHG,kBAACS,EAAA,EAAD,CAAeP,QAAShB,GAAxB,sBAUf,kBAAC,IAAD,Q,gBChMiCiE,EAAU,QAC/CC,EAAa,GAAyBC,EAAiB,GACvDC,EAAc,EAAsBC,EAAoB,GAEtDC,EAAsBC,UAAOC,IAAV,sNAMH,SAACC,GAAD,OAAgBA,EAAMC,MAAMC,WAI5CC,EAAkBL,UAAOC,IAAV,oUAQR,SAACC,GAAD,OAAgBA,EAAMC,MAAMG,WAU1B,SAACJ,GAAD,OAAgBA,EAAMC,MAAMI,UAIrCC,EAAa,SAACC,GAElB,IAAMC,EAAiBC,SAASC,eAAe,kBAC7C,GAAqB,MAAlBF,EAAuB,CACxB,IAAI,IAAIG,EAAE,EAAEA,EAAE,EAAEA,IACdH,EAAeI,SAASD,GAAGrE,UAAY,GAEzCkE,EAAeI,SAASL,GAASjE,UAAY,oBAC7C,IAAMuE,EAAcJ,SAASC,eAAe,eAC1B,MAAfG,IACDA,EAAY5F,MAAQ,KAEHuE,EAAL,GAAXe,EAA0B,QAAyB,UACtDZ,EAASY,EACTO,OAgBAC,EAAW,SAAXA,IACJ,IAAIC,EAbe,WACnB,IAAItD,EAAgBC,IAAOC,OAAO1D,GAClC,GAAe,MAAZwD,EAAkB,CACnB,IAAIG,EAAqBH,EAASI,MAElC,OADe,IAAIG,SAAOC,SAASL,EAAeM,IAAIL,MAAO9D,GAC/CiH,qBAAqB3G,EAAQH,GAC1C4E,MAAK,SAACC,GACL,OAAOA,KAGL,OAAO,EAGDkC,GACA,GAATF,GACDA,EAAMjC,MAAK,SAACM,GAEPA,EAAItF,MAAMqC,OAASqC,IAEnB0C,GAAe9B,EAAItF,MAAMqH,eAAe5C,cACvCO,MAAK,SAACsC,GAEJF,GAAe9B,EAAItF,MAAMuE,gBAAgBE,cACxCO,MAAK,SAACuC,GAEL,IAAIvE,EAAIwE,GAAWlC,EAAItF,MAAMqH,eAAe5C,cACpC,GAALzB,GACDA,EAAEgC,MAAK,SAACyC,GAGN,GAFIA,IAAM/B,EAAa,cAEI,MAAxBzE,YAAE,mBAA2B,CAAC,IAAD,MAkC1ByG,EAhCEC,EAAkB1G,YAAE,mBACpB2G,EAAwB3G,YAAE,yBAC1B4G,EAAiB5G,YAAE,kBACnB6G,EAAuB7G,YAAE,wBAGzB8G,GAFkB9G,YAAE,mBAEGA,YAAE,yBACzB+G,EAAsB/G,YAAE,uBAC9B,GAAsB,MAAnB0G,EAAwB,CAAC,IAAD,IAOpB,EAMA,EATL,GAHAA,EAAgBlE,UAAY6B,EAAItF,MAAMqH,eAAeY,SAAzB,UAAmCC,YAAO/H,UAA1C,aAAmC,EAAkB8H,QACjFL,EAAsBnE,UAAYkE,EAAgBlE,UAClDsE,EAAqBtE,UAAY6B,EAAItF,MAAMuE,gBAAgB0D,SAA1B,UAAoCC,YAAO/H,UAA3C,aAAoC,EAAkB8H,QACpF3C,EAAItF,MAAMqH,eAAe5C,gBAAgBkB,EAC1CkC,EAAeM,IAAMxC,EAAUL,EAAItF,MAAMqH,eAAe5C,cAAc2D,UAAUC,aAGhFR,EAAeM,KAAM,UAAAD,YAAO/H,UAAP,eAAkBmI,OAAQ,GAEjD,GAAGhD,EAAItF,MAAMuE,gBAAgBE,gBAAgBkB,EAC3CqC,EAAoBG,IAAMxC,EAAUL,EAAItF,MAAMuE,gBAAgBE,cAAc2D,UAAUC,aAGtFL,EAAoBG,KAAM,UAAAD,YAAO/H,UAAP,eAAkBmI,OAAQ,GAEtDR,EAAqBK,IAAMN,EAAeM,IAG3ClH,YAAE,WAA8BwC,UAAY8E,YAAajD,EAAItF,MAAMwI,SACnEvH,YAAE,gBAAmCwC,UAAa8E,YAAajD,EAAItF,MAAMyI,YAAYC,KAAKC,IAAI,GAAGrD,EAAItF,MAAMqH,eAAe7C,UAAY,KAAQc,EAAItF,MAAMqH,eAAeY,SAAzB,UAAmCC,YAAO/H,UAA1C,aAAmC,EAAkB8H,UAAY,GAC/MhH,YAAE,UAA6BwC,UAAa8E,YAAajD,EAAIsD,OAAOF,KAAKC,IAAI,GAAGrD,EAAItF,MAAMuE,gBAAgBC,UAAY,KAAQc,EAAItF,MAAMuE,gBAAgB0D,SAA1B,UAAoCC,YAAO/H,UAA3C,aAAoC,EAAkB8H,UAAY,GAChMhH,YAAE,aAAgCwC,UAAa8E,YAAajD,EAAItF,MAAM6I,UAAUH,KAAKC,IAAI,GAAGrD,EAAItF,MAAMuE,gBAAgBC,UAAY,KAAQc,EAAItF,MAAMuE,gBAAgB0D,SAA1B,UAAoCC,YAAO/H,UAA3C,aAAoC,EAAkB8H,UAAY,GAE/L,IACe,EADXa,EAAeP,YAAajD,EAAItF,MAAM+I,MAASL,KAAKC,IAAI,GAAuC,EAApCrD,EAAItF,MAAMuE,gBAAgBC,UACvG,GAA0B,GAAvBc,EAAItF,MAAMgJ,UAAiBtB,EAAOoB,EAAS,gBAAkBxD,EAAItF,MAAMqH,eAAeY,SAAzB,UAAmCC,YAAO/H,UAA1C,aAAmC,EAAkB8H,SAAU,SAAUP,EAAOoB,EAAS,KAC3H,GAA3BxD,EAAItF,MAAMiJ,cAAqBvB,GAAQ,cAAiD,GAA3BpC,EAAItF,MAAMiJ,cAAqBvB,GAAQ,eACpE,GAA3BpC,EAAItF,MAAMiJ,cAAqBvB,GAAQ,gBAAmD,GAA3BpC,EAAItF,MAAMiJ,gBAAqBvB,GAAQ,gBAC7GzG,YAAE,uBAA0CwC,UAAYiE,EAEtDpC,EAAItF,MAAMU,OAEVO,YAAE,mBAAsCwC,UAAY,6CAExB,GAAvB6B,EAAItF,MAAM6I,UAEf5H,YAAE,mBAAsCwC,UAAY,gEAE/C6B,EAAI4D,MAETjI,YAAE,mBAAsCwC,UAAY,4CAIpDxC,YAAE,mBAAsCwC,UAAY,4CAA+C,IAAI0F,KAAyB,IAApB7D,EAAItF,MAAMoJ,KAAK,IAAWC,mBAAmB,QAAS,CAAEC,QAAQ,OAAQC,KAAK,UAAWC,MAAM,QAASC,IAAI,YAAe,SAGxOxI,YAAE,mBAAsCc,MAAMC,QAAU,GAExDsD,EAAItF,MAAMqC,OAASjC,EAAWa,YAAE,cAAiCc,MAAMC,QAAU,GAAMf,YAAE,cAAiCc,MAAMC,QAAU,OAC3IjC,EAAWuH,EAAMoB,KAAKC,IAAI,GAAGrD,EAAItF,MAAMqH,eAAe7C,SACtDlE,EAAWiH,EAAOmB,KAAKC,IAAI,GAAGrD,EAAItF,MAAMuE,gBAAgBC,SACxDnE,EAAUiF,EAAImD,YAAcC,KAAKC,IAAI,GAAGrD,EAAItF,MAAMqH,eAAe7C,SACjEhE,EAAO8E,EAEPyB,eAMVvB,OAAM,SAACrC,GAELuG,YAAW,WAAO1C,MAAa,SAInC2C,MAAM,0BACNC,OAAOC,SAASC,KAAO,cAG1BtE,OAAM,SAACrC,GAENuG,YAAW,WAAO1C,MAAa,SAK/BI,GAAiB,SAAC2C,GACFnG,IAAOC,OAAO1D,GAClC,OAAG4J,GAAYrF,IACC,IAAIR,SAAOC,SAAS4F,EAAU3F,IAAI4F,MAAO/J,GAC1CgK,UAAU7J,GACtB4E,MAAK,SAACC,GACL,OAAOA,KAKFhF,EAAOiK,WAAW9J,IAGvBoH,GAAa,SAAC2C,GAClB,IAAIxG,EAAgBC,IAAOC,OAAO1D,GAClC,OAAe,MAAZwD,IACEwG,GAAiBzF,IACJ,IAAIR,SAAOC,SAASgG,EAAe/F,IAAI4F,MAAO/J,GAC/CmK,UAAUhK,EAAUuD,EAASI,OACzCiB,MAAK,SAACC,GACL,OAAOA,EAAO,KAGToF,QAAQC,SAAQ,KAmBvBvG,GAAQ,SAACwG,GACb,IAAI5G,EAAgBC,IAAOC,OAAO1D,GAClC,GAAe,MAAZwD,EAAkB,CACnB,IAAIG,EAAqBH,EAASI,MAC5BC,EAAS/D,EAAOgE,YAChBuG,EAAS,IAAItG,SAAOC,SAASL,EAAeM,IAAIL,MAAOC,GAE7D,OADAyG,QAAQC,IAAI7F,IAAKC,MAAMC,MAAMwF,EAAU,GAAI,QACxC/J,EAAKR,MAAMqH,eAAe5C,cAAgBC,IAClC8F,EAAOG,UAAUpK,EAASsE,IAAKC,MAAMC,MAAMwF,EAAU,GAAI,OAAQ,CAACrJ,MAAO2D,IAAKC,MAAMC,MAAMwF,EAAU,GAAI,SAG1GC,EAAOG,UAAUpK,EAASsE,IAAKC,MAAMC,MAAMwF,EAAU,GAAI,QAG9D,OAAO,GAETK,GAAU,SAACL,GACf,IAAI5G,EAAgBC,IAAOC,OAAO1D,GAClC,GAAe,MAAZwD,EAAkB,CACnB,IAAIG,EAAqBH,EAASI,MAC5BC,EAAS/D,EAAOgE,YAChBuG,EAAS,IAAItG,SAAOC,SAASL,EAAeM,IAAIL,MAAOC,GAE7D,OADAyG,QAAQC,IAAI7F,IAAKC,MAAMC,MAAMwF,EAAU,GAAI,QACpCC,EAAOI,QAAQrK,EAASsE,IAAKC,MAAMC,MAAMwF,EAAU,GAAI,QAE1D,OAAO,GAYTM,GAAiB,SAACN,GACtB,IAAIO,EAEAA,EADY,SAAXrF,EACO8E,EAAQ,IAAOxK,EAGfwK,EAAQ,IAAOlK,EAEzB,IAAMyG,EAAcJ,SAASC,eAAe,eAC1B,MAAfG,IACDA,EAAY5F,MAAQ4J,EAAO,KAG3BC,GAAe,WDnNC,IAACvK,EAAW8G,EAAX9G,ECqNPA,EAAKR,MDnNjBD,EAF8BuH,ECqNNhH,EDlNxB8B,YAAS,mBAAmB,WAAO,IAAD,MAC9BpC,EAAQQ,EACPS,YAAE,mBAAuCwC,UAAY,qBAAuBjD,EAAK+D,gBAAgB0D,SAArB,UAA+BC,YAAO/H,UAAtC,aAA+B,EAAkB8H,SAC7HhH,YAAE,sBAA0CwC,UAAY,YAAe8E,YAAajB,GAAQ,KAAO9G,EAAK+D,gBAAgB0D,SAArB,UAA+BC,YAAO/H,UAAtC,aAA+B,EAAkB8H,SACrJvH,EAASF,EAAKE,OACd,IAAMsK,EAAY,UAAK/J,YAAE,0BAAP,aAAI,EAA0C4F,SAC7DnG,GACCsK,EAAa,GAAGzI,UAAY,sBAC5ByI,EAAa,GAAGzI,UAAY,KAG5ByI,EAAa,GAAGzI,UAAY,sBAC5ByI,EAAa,GAAGzI,UAAY,IAE/BtB,YAAE,qBAA2CuC,UAAW,EACxDvC,YAAE,qBAA2CwC,UAAY,OAEzDxC,YAAE,cAAiCc,MAAMC,QAAU,GACpDpB,GAAW,MCmMbmG,GAAyB,WAE7B,GAAW,MAARvG,EAAc,CAEf,IAAMyK,EAAsBvE,SAASC,eAAe,uBAC9CuE,EAAexE,SAASC,eAAe,gBACvCwE,EAAezE,SAASC,eAAe,gBAE3CwE,EAAa1H,UADD,SAAXgC,EACwB,aAAgB2F,KAAKC,aAAa,QAAS,CAACC,yBAA0B,KAAKC,OAAOxL,GAAY,IAG9F,YAAeqL,KAAKC,aAAa,QAAS,CAACC,yBAA0B,KAAKC,OAAOlL,GAAW,IAGpHG,EAAKR,MAAMU,QAEE,SAAX+E,EACDyF,EAAa1H,UAAW,GAGxB0H,EAAa1H,UAAW,EAEtB0H,EAAazH,UADE,YAAdiC,EACwB,UAGA,OAI7BuF,EAAoBzH,UAAW,GAED,GAAxBhD,EAAKR,MAAM6I,WAgBXrI,EAAK0I,OAdG,SAAXzD,EACDyF,EAAa1H,UAAW,GAGxB0H,EAAa1H,UAAW,EAEtB0H,EAAazH,UADE,YAAdiC,EACwB,UAGA,OAG7BuF,EAAoBzH,UAAW,IAoB/B0H,EAAa1H,UAAW,EAAMyH,EAAoBzH,UAAW,EAC5C,cAAdkC,EAGEwF,EAAazH,UADD,SAAXgC,EACwB,mBAAqBjF,EAAKR,MAAMqH,eAAeY,OAGhD,UAGP,IAAdvC,EAGJwF,EAAazH,UADD,SAAXgC,EACwB,QAGD,UAGN,YAAdC,IACNwF,EAAa1H,UAAW,GAEP,YAAhBqC,EACDoF,EAAoBzH,UAAW,EAG/ByH,EAAoBxH,UAAY,mBAIjCjD,EAAKoI,OAAS,EACfqC,EAAoBlJ,MAAMC,QAAU,GAGpCiJ,EAAoBlJ,MAAMC,QAAU,SA+Q3BwJ,UA3Qa,WAC1B,MAAqCpK,cAA7BC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,QAASC,EAA1B,EAA0BA,QACpBkK,EAASC,cACf,EAAgCC,oBAAS,GAAzC,mBAEMnK,GAFN,UAE0BC,eAC1BxB,EAASsB,EACTqK,qBAAU,WAER7L,EAAW,EAAGM,EAAU,EAAGoF,EAAU,QACrCC,EAAa,GAAGG,EAAe,GAAGF,EAAY,GAC9CC,EAAS,EAAGpF,EAAO,QAErB4B,YAAS,mBAAmB,WAC1B7B,EAAUsL,YAAE,KAAK,IACH,MAAXxK,GAA8B,MAAXC,GAA6C,MAA1BwK,KAAKC,UAAUN,KACnDrL,GAAWiB,GAAWlB,GAAYmB,GAAWwK,KAAKC,UAAUpG,IAAcmG,KAAKC,UAAUN,KACzF9F,EAAY8F,EAAOrL,EAAUiB,EAASlB,EAAWmB,EAChDiF,EAAWX,GACXoB,SAIR,IDlWmBgF,EACH,OADGA,EC+bP,WACV5J,YAAS,wBAAwB,WACjB,MAAXf,GAA8B,MAAXC,GACpB0F,UDjcgBnG,EAAUoL,KAAKD,GCofrC,OACE,oCACE,yBAAKzJ,UAAU,aAEf,yBAAKA,UAAU,WACb,yBAAKA,UAAU,uBACf,yBAAKA,UAAU,kBAAkBR,MAAO,CAACC,QAAQ,SAAjD,IAA2D,0BAAMM,GAAG,oBAClE,yBAAKA,GAAG,uBAAuBP,MAAO,CAACc,WAAW,UAClD,uBAAGP,GAAG,0BAA4B,yBAAKA,GAAG,wBAAuB,uBAAGA,GAAG,0BACvE,yBAAKA,GAAG,kBAAkBC,UAAU,eAAeR,MAAO,CAACmK,WAAW,OAAQC,QAAQ,MAAOnK,QAAQ,OAAQU,SAAS,UAItH,yBAAKJ,GAAG,kBAAkBC,UAAU,SACpC,yBAAKA,UAAU,iBAAiBD,GAAG,kBAC/B,uBAAGE,QAAS,kBAAM+D,EAAW,IAAIhE,UAAU,qBAA3C,SACA,uBAAGC,QAAS,kBAAM+D,EAAW,IAAGhE,UAAU,IAA1C,WAEA,4BAAQD,GAAG,aAAaE,QAASuI,GAAcxI,UAAU,2BAA2BR,MAAO,CAACC,QAAQ,SAChG,6CAGR,yBAAKO,UAAU,qBAAqBD,GAAG,aACjC,yBAAKC,UAAU,kBACX,yCACA,0BAAMD,GAAG,gBAAT,aAEJ,yBAAKC,UAAU,oBACX,2BAAOD,GAAG,cAAcM,YAAY,SACpC,0BAAMN,GAAG,oBACT,yBAAKA,GAAG,oBAEZ,yBAAKC,UAAU,uBACb,0BAAMD,GAAG,sBAAsBP,MAAO,CAACqK,MAAM,iBAGrD,yBAAK7J,UAAU,kBACb,4BAAQC,QAAS,kBAAMqI,GAAe,MAAtC,OACA,4BAAQrI,QAAS,kBAAMqI,GAAe,MAAtC,OACA,4BAAQrI,QAAS,kBAAMqI,GAAe,MAAtC,OACA,4BAAQrI,QAAS,kBAAMqI,GAAe,OAAtC,SAEF,yBAAKvI,GAAG,MAAMC,UAAU,6CAGxB,yBAAKA,UAAU,iBACblB,EAGI,kBAAC0B,EAAA,EAAD,CAAeP,QApMP,WAGpB,IAAM0I,EAAexE,SAASC,eAAe,gBACvCG,EAAcJ,SAASC,eAAe,eAC5C,GAAkB,cAAdjB,GACD,GAAmB,MAAhBwF,EAAsB,CACtBA,EAAa1H,UAAW,EAAK0H,EAAazH,UAAY,MACtD,IAAIT,EA1MU,WACtB,IAAIW,EAAgBC,IAAOC,OAAO1D,GAClC,GAAe,MAAZwD,EAAkB,CACnB,IAAIG,EAAqBH,EAASI,MAC5BC,EAAS/D,EAAOgE,YAEvB,OADe,IAAIC,SAAOC,SAAS3D,EAAKR,MAAMqH,eAAe5C,aAAcL,IAAI4F,MAAOhG,GACzEqI,QAAQvI,EAAgBe,IAAKC,MAAMC,MAAM,wBACrDC,MAAK,SAACC,GACF,OAAOA,KAGP,OAAO,EA+LQqH,GACH,GAALtJ,IACDU,aAAc,GAAML,YAAY,eAAeD,YAAc,IAC7D8H,EAAa1H,UAAW,EAAMkC,EAAa,WAC3C1C,EAAEgC,MAAK,SAACG,GACHA,EAAGC,MACFD,EAAGE,OACFL,MAAK,SAACM,GACL4F,EAAa1H,UAAW,EAAOD,YAAc,KAC5B,GAAd+B,EAAIC,QACLlC,YAAY,sBACZD,YAAc,QACdsC,EAAa,KAIbtC,YAAc,SAASC,YAAY,sBACnCqC,EAAa,cAEfqB,QAEDvB,OAAM,SAACrC,GACJuC,EAAa,aACbxC,EAAMC,SAKfqC,OAAO,SAACrC,GACPuC,EAAa,aACbxC,EAAMC,YAKb,CACH,IAKU2H,EALNyB,EAAO,KAIP,GAFoBA,EAAV,SAAX9G,EAA4B1B,GAAkB6G,GAE1B,MAAhBM,GAAuC,MAAfpE,GACVgE,EAAOhE,EAAY5F,OACxB,IACRgK,EAAa1H,UAAW,EAAO0H,EAAazH,UAAY,MACxDC,aAAc,GAAML,YAAY,eAAeD,YAAc,IAC7D8H,EAAa1H,UAAW,EAAMkC,EAAa,WAC3C6G,EAAKjI,YAAMwG,EAAMtK,EAAKR,MAAMqH,eAAe7C,UAC1CQ,MAAK,SAACG,GACFA,EAAGC,MACJD,EAAGE,OACFL,MAAK,SAACM,GACL4F,EAAa1H,UAAW,EAAOD,YAAc,KAAMmC,EAAa,GAC7C,GAAdJ,EAAIC,QACLlC,YAAY,eACZD,YAAc,QACd4D,MAIA5D,YAAc,SAASC,YAAY,uBAErC0D,QAEHvB,OAAM,SAACrC,GACJuC,EAAa,GACbxC,EAAMC,SAIbqC,OAAM,SAACrC,GACNuC,EAAa,GACbxC,EAAMC,OAMlB,SAASD,EAAMC,GACbC,YAAc,SACdC,YAAYC,YAAiBH,IAAMI,cAChB,MAAhB2H,IAAuBA,EAAa1H,UAAW,GAClDuD,OA2GiDzE,GAAG,gBAA1C,OAFA,kBAACS,EAAA,EAAD,CAAeP,QAAShB,GAAxB,oBAON,yBAAKc,GAAG,oBAAoBC,UAAU,SACpC,kBAACuD,EAAD,KACA,kBAACM,EAAD,KACE,gDACA,0BAAM9D,GAAG,aAIX,kBAAC8D,EAAD,KACE,2CACA,0BAAM9D,GAAG,mBAMX,kBAACwD,EAAD,KACA,kBAACM,EAAD,KACE,kDACA,0BAAM9D,GAAG,eAIX,kBAAC8D,EAAD,KACE,4CACA,0BAAM9D,GAAG,aAKX,yBAAKC,UAAU,iBACb,kBAACQ,EAAA,EAAD,CAAeP,QAnIV,WACf,IAAMyI,EAAsBvE,SAASC,eAAe,uBACpD,GAA0B,MAAvBsE,EAA6B,CAC9BA,EAAoBzH,UAAW,EAAKyH,EAAoBxH,UAAY,MAChE,IAAIT,EAnQO,WACnB,IAAIW,EAAgBC,IAAOC,OAAO1D,GAClC,GAAe,MAAZwD,EAAkB,CACnB,IAAIG,EAAqBH,EAASI,MAC5BC,EAAS/D,EAAOgE,YAEtB,OADe,IAAIC,SAAOC,SAASL,EAAeM,IAAIL,MAAOC,GAC/CwI,SAASjM,GAEnB,OAAO,EA2PQkM,GACH,GAALzJ,IACDU,aAAc,GAAML,YAAY,eAAeD,YAAc,IAC7D6H,EAAoBzH,UAAW,EAAMqC,EAAe,WACpD7C,EAAEgC,MAAK,SAACG,GACHA,EAAGC,MACFD,EAAGE,OACFL,MAAK,SAACM,GACL2F,EAAoBzH,UAAW,EAAOD,YAAc,KACnC,GAAd+B,EAAIC,QACLlC,YAAY,yBACZD,YAAc,QACdyC,EAAe,GACfmB,MAIA5D,YAAc,SAASC,YAAY,sBACnCwC,EAAe,IAEjBkB,QAEDvB,OAAM,SAACrC,GACN0C,EAAe,GACd3C,EAAMC,SAKdqC,OAAO,SAACrC,GACP0C,EAAe,GACf3C,EAAMC,OAIlB,SAASD,EAAMC,GACbC,YAAc,SACdC,YAAYC,YAAiBH,IAAMI,cACT,MAAvB0H,IAA8BA,EAAoBzH,UAAW,GAChEuD,OAwF2CzE,GAAG,uBAAtC,qBAIJ,kBAAC,EAAD","file":"static/js/38.13318112.chunk.js","sourcesContent":["import React, { ReactElement, useCallback, useContext, useEffect, useMemo, useState, MouseEvent } from 'react'\nimport './stake.css'\nimport { ButtonError, ButtonPrimary, ButtonConfirmed } from '../../components/Button'\nimport { onToggle, E, readErrorMessage, onRender, toBig, formatNumber, native } from '../../components/utility';\nimport _ from 'lodash';\nimport { useWalletModalToggle } from '../../state/application/hooks';\nimport {ethers} from \"ethers\";\nimport Web3 from 'web3';\nimport abi from './functions/abi';\nimport config from './functions/config';\nimport { useActiveWeb3React } from '../../hooks'\nimport { ModalInfo, showModalInfo, setModalMsg, setModalStaus, hideModalInfo } from '../../components/infomodal';\nimport { ZERO_ADDRESS } from 'dxswap-sdk';\n//variables declration\nlet _liquidity: any = '0'; let _balance: any; let locked: boolean = false; let _pool: any;\nlet _duration: any = 0; let _ether: any; let _account: any;let _chainid: any;\nlet hasSaved: boolean = false //to know if a new pool was Saved \nlet SaveHooks: any = []\n\nconst SavePool = () => {\n  let _Address: any = config.chains[_chainid] as unknown as JSON | null\n  if(_Address != null) {\n    let _stakeAddress: any = _Address.stake as any | \"\"\n    const signer = _ether.getSigner();\n    const stake = new ethers.Contract(_stakeAddress, abi.stake, signer);\n    let a: any;  ////console.log(Web3.utils.toWei(_liquid + \"\", 'wei'))\n    const liquid = toBig(_liquidity, _pool.rewardTokenInfo.decimal)\n    _duration = _duration * 1\n    //console.log(liquid, locked, _duration)\n    if(_pool.rewardTokenInfo.tokenAddress != ZERO_ADDRESS) {\n        a = stake.modifyStakePool(_pool.poolId,Web3.utils.toWei(liquid + \"\", 'wei'), locked,_duration)\n    }else {a = stake.modifyStakePool(_pool.poolId,Web3.utils.toWei(liquid + \"\", 'wei'), locked,_duration, {value: Web3.utils.toWei(liquid + \"\", 'wei')})}\n    return a.then((_res: any)=> {  \n        return _res;      \n    })\n  }\n  else {return false}\n}\nconst validateStakeData = () => { \n    _liquidity =  getInputValue('stake_edit_liquid_input')\n    _duration = getInputValue('stake_edit_end_input')\n    //console.log(_liquidity, _duration)\n    if((_liquidity * 1) > (_balance * 1)) {\n        return [false, \"Insufficient balance to provide for the desired liquidity.\"]\n    }\n    else if((_liquidity * 1) < 0) {\n        return [false, \"Liquidity amount cannot be negative\"]\n    }\n    else if((_duration * 1) < 0) {\n        return [false, \"Duration value cannot be negative\"]\n    }    \n    return [true]   \n}\nconst getInputValue = (_id: any) => {\n   const _div = E(_id) as HTMLInputElement | null\n   if(_div != null) {\n       return _div.value\n   }\n   return \"\"\n}\nconst hasSavedNew = (_callback: Function) => {\n  if(_callback != null){SaveHooks.push(_callback)}\n}\nconst callHooks = () => {\n  if(SaveHooks.length > 0 && hasSaved) {\n    hasSaved = false\n      SaveHooks.forEach((callback:any) => {\n          callback()\n      });\n      hasSaved = false\n  }\n}\nconst showEditStake = (pool: any, bal: any) => { //console.log(pool)\n    //to show edit stake pool\n    _balance = bal\n    onRender('stake_edit_info', () => {\n        _pool = pool;\n        (E('stake_edit_info') as HTMLSpanElement).innerHTML = \"Add liquidity in \" + (pool.rewardTokenInfo.symbol || native(_chainid)?.symbol);\n        (E('stake_edit_balance') as HTMLSpanElement).innerHTML = \"Balance: \" + (formatNumber(bal)) + \" \" + (pool.rewardTokenInfo.symbol || native(_chainid)?.symbol)\n        locked = pool.locked\n        const _toggleChild = ((E('stake_edit_lock') as HTMLDivElement)?.children) as HTMLCollectionOf<HTMLDivElement>\n        if(locked) {\n            _toggleChild[0].className = 'stake_toggle_select'\n            _toggleChild[1].className = ''\n        }\n        else {\n            _toggleChild[1].className = 'stake_toggle_select'\n            _toggleChild[0].className = ''\n        }\n        (E('stake_edit_button') as HTMLButtonElement).disabled = false;\n        (E('stake_edit_button') as HTMLButtonElement).innerHTML = \"Save\";\n        //SHOW SAVE MODAL\n        (E('stake_save') as HTMLDivElement).style.display = \"\"\n        hasSaved = false\n    })       \n}\nconst Save: React.FC<{}> = (): React.ReactElement => {\n    const { account, chainId, library } = useActiveWeb3React()\n    _ether = library;  _account = account;_chainid = chainId\n    const toggleWalletModal = useWalletModalToggle()\n     onToggle(\"stake_edit_lock\", (_value: any) => {\n        (_value.toLowerCase() == 'locked') ? locked = true : locked = false\n    }) \n    const doButtonAction = () => { \n        //for button actions\n        const a = validateStakeData(); \n        const stake_edit_button = E('stake_edit_button') as HTMLButtonElement\n        if(a[0]) {\n            stake_edit_button.disabled = true;  stake_edit_button.innerHTML = \"...\";\n            showModalInfo(true);setModalMsg('Transacting');setModalStaus('')\n              stake_edit_button.disabled = true; \n              SavePool()\n              .then((tx: any) => {\n                if(tx.hash) {\n                  tx.wait()\n                  .then((res: any) => {\n                    stake_edit_button.disabled = false; hideModalInfo(3000);\n                    stake_edit_button.innerHTML = \"Save\"\n                      if(res.status == 1) {\n                        setModalMsg(\"Saved successfull\")\n                        setModalStaus('good')\n                        hasSaved = true\n                        hideSaveModal()\n                      }\n                      else{\n                        //transaction failed\n                        setModalStaus('error');setModalMsg(\"Transaction failed\")\n                      }\n                   })\n                  .catch((err: any) => {  \n                      reset(err)\n                  })\n                }\n              })\n              .catch((err: any) => {\n                reset(err)\n              })\n        }\n        else {\n            showModalInfo(true);setModalStaus('error');setModalMsg(a[1])\n            hideModalInfo(4000)\n        }\n        function reset(err: any) {  \n            setModalStaus('error')\n            setModalMsg(readErrorMessage(err));hideModalInfo();\n            if(stake_edit_button != null) {stake_edit_button.disabled = false}\n            stake_edit_button.innerHTML = \"Save\"\n        }\n    }\n    const hideSaveModal = () => {\n      const _c = E('stake_save') as HTMLDivElement | null\n      if(_c != null) {\n        _c.style.display = 'none'\n        //reset everything\n        _pool = null; _balance = 0; _liquidity = 0;\n        callHooks()\n      }\n\n    }\n    onRender('stake_save', () => {\n        if(_pool != null) {\n            if(_pool.owner != _account) {\n                //not an owner\n                //HID SAVE MODAL\n                (E('stake_save') as HTMLDivElement).style.display = \"none\"\n            }\n        }\n    })\nreturn (\n      <>\n      \n        <div id='stake_save' className='stake_overlay' style={{display:'none'}}>\n           <div className='stake_modal topGravity'>\n             <div onClick={hideSaveModal} className='stake_cancel'><span className='fas fa-times'></span></div>\n             <span className='' style={{margin:'15px', fontSize:'18px'}}>Edit Stake Pool</span>\n             <div className='stake_modal_display'>   \n                <section className='stake_option_section'>\n                    <span id='stake_edit_info' className='stake_token_font span'>Add liquidity in BNB</span>\n                    <div> \n                     <input id='stake_edit_liquid_input' type='number' className='input' placeholder='amount'  />\n                    </div>\n                    <span id='stake_edit_balance' className='msg'>Balance: </span>\n                </section>\n                <section className='stake_option_section'>\n                    <span className='stake_token_font span'>Lock staking</span>\n                    <div> \n                      <div id='stake_edit_lock' className='stake_toggle' style={{marginLeft:'10px'}}>\n                        <div className='stake_toggle_select'>locked</div>\n                        <div>Unlocked</div>\n                       </div>\n                    </div>\n                </section>\n                <section className='stake_option_section'>\n                    <span className='stake_token_font span'>Extend duration in days</span>\n                    <div> \n                     <input id='stake_edit_end_input' type='number' className='input' placeholder='set duration'  />\n                    </div>\n                </section>\n                <section className='stake_option_section' style={{border:'0px'}}>\n                   {!account ? (\n                       <ButtonPrimary onClick={toggleWalletModal}>Connect Wallet</ButtonPrimary>\n                   ):\n                   (\n                    <ButtonPrimary onClick={doButtonAction} id='stake_edit_button'>Save</ButtonPrimary>\n                   )}\n                  \n             </section>\n             </div>\n           </div>\n        </div>\n        <ModalInfo/>\n      </>\n    )\n}\n\nexport { Save, hasSavedNew, showEditStake};","import React, { useEffect, useState } from 'react'\nimport './stake.css'\nimport Logo from '../../assets/images/logo_trans.png' \nimport { ButtonError, ButtonPrimary, ButtonConfirmed } from '../../components/Button'\nimport styled, { ThemeContext } from 'styled-components'\nimport { useWalletModalToggle } from '../../state/application/hooks'\nimport { useActiveWeb3React } from '../../hooks'\nimport { Save, hasSavedNew, showEditStake } from './modify'\nimport { onRender, E, G, native, formatNumber, readErrorMessage, toBig } from '../../components/utility'\nimport {ethers} from \"ethers\";\nimport Web3 from 'web3';\nimport abi from './functions/abi';\nimport config from './functions/config';\nimport { useAllTokens } from '../../hooks/Tokens'\nimport { ZERO_ADDRESS } from '../../constants'\nimport { hideModalInfo, setModalMsg, setModalStaus, showModalInfo } from '../../components/infomodal'\n\nlet _chainid: any; let _wallet: any; let _ether:any\nlet _balance: any; let _staked: any; let _Option = \"stake\";let rbalance: any;\nlet _buttonAct = \"\";let stakeId: any; let allTokens: any = {};\nlet viewNo: any = 0; let pool: any; let _withdrawAct: any = \"\";\n\nconst StakeStatsContainer = styled.div`\n  width: 100%;\n  padding: 10px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background-color: ${(props: any) => props.theme.bg1And2};\n  margin-top: 20px;\n  border-radius: 8px;\n`\nconst VotingAddresses = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  & p {\n    margin: 0;\n    font-size: 0.85rem;\n    margin-bottom: 7px;\n    color: ${(props: any) => props.theme.purple2}\n  }\n\n  & span {\n    font-size: 0.9rem;\n    font-weight: 600;\n\n    & sub {\n      font-size: 0.7rem;\n      font-weight: 500;\n      color: ${(props: any) => props.theme.green1};\n    }\n`\n//to switch between stake and unstake\nconst selectView = (_viewNo: number) => {\n  //reset all views first\n  const _proposalViews = document.getElementById('proposal-views')\n    if(_proposalViews != null){\n      for(let i=0;i<2;i++) {\n        _proposalViews.children[i].className = \"\"\n      }\n      _proposalViews.children[_viewNo].className = \"selected-proposal\"\n      const stake_input = document.getElementById('stake_input') as HTMLInputElement | null\n      if(stake_input != null) {\n        stake_input.value = \"0\"\n      }\n      if(_viewNo == 0) { _Option = \"stake\"} else {_Option = \"unstake\"}\n      viewNo = _viewNo\n      showConditionalDisplay()\n    }\n}\n//to get stake info\nconst getStakeData = () => {\n  let _Address: any = config.chains[_chainid] as unknown as JSON | null\n  if(_Address != null) {\n    let _stakeAddress: any = _Address.stake as any | \"\"\n    const _stake = new ethers.Contract(_stakeAddress, abi.stake, _ether);\n    return _stake.getPoolWithIdAndUser(stakeId,_wallet)\n    .then((_res: any)=> {  \n      return _res\n    })\n  }\n  else {return false}\n}\nconst loadData = () => {    \n  let _data = getStakeData()\n  if(_data != false){\n    _data.then((res: any) => {  \n      //checking if its a valid id\n      if(res._pool.owner != ZERO_ADDRESS){\n         //get the user balance of the stake token\n         getUserBalance(res._pool.stakeTokenInfo.tokenAddress)\n         .then((bal: any) => {\n            //get user balance for reward token\n            getUserBalance(res._pool.rewardTokenInfo.tokenAddress)\n            .then((rbal: any) => {\n              //get is allowed for staking currency\n              let a = getAllowed(res._pool.stakeTokenInfo.tokenAddress)\n              if(a != false){\n                a.then((bol: any) => {  \n                  if(!bol) {_buttonAct = \"permission\"}\n                  //to prevent showing when it has been removed from view\n                  if(E('stake_coin_name') != null){\n                    //load the currency details\n                    const stake_coin_name = E('stake_coin_name')\n                    const stake_head_stake_name = E('stake_head_stake_name') as HTMLDivElement\n                    const stake_coin_img = E('stake_coin_img') as HTMLImageElement\n                    const stake_head_stake_img = E('stake_head_stake_img') as HTMLImageElement\n                    const stake_head_info = E('stake_head_info') as HTMLDivElement\n                    //earn image details\n                    const stake_head_earn_name = E('stake_head_earn_name') as HTMLDivElement\n                    const stake_head_earn_img = E('stake_head_earn_img') as HTMLImageElement\n                    if(stake_coin_name != null){\n                      stake_coin_name.innerHTML = res._pool.stakeTokenInfo.symbol || native(_chainid)?.symbol\n                      stake_head_stake_name.innerHTML = stake_coin_name.innerHTML\n                      stake_head_earn_name.innerHTML = res._pool.rewardTokenInfo.symbol || native(_chainid)?.symbol\n                      if(res._pool.stakeTokenInfo.tokenAddress in allTokens){\n                        stake_coin_img.src = allTokens[res._pool.stakeTokenInfo.tokenAddress].tokenInfo.logoURI\n                      }\n                      else {\n                        stake_coin_img.src = native(_chainid)?.logo || \"\"\n                      }\n                      if(res._pool.rewardTokenInfo.tokenAddress in allTokens){\n                        stake_head_earn_img.src = allTokens[res._pool.rewardTokenInfo.tokenAddress].tokenInfo.logoURI\n                      }\n                      else {\n                        stake_head_earn_img.src = native(_chainid)?.logo || \"\"\n                      }\n                      stake_head_stake_img.src = stake_coin_img.src\n                    }\n                    //loading extra pool details\n                    (E('stakers') as HTMLDivElement).innerHTML = formatNumber(res._pool.stakers);\n                    (E('total_staked') as HTMLDivElement).innerHTML = (formatNumber(res._pool.totalStaked/Math.pow(10,res._pool.stakeTokenInfo.decimal)) + \" \"  + (res._pool.stakeTokenInfo.symbol || native(_chainid)?.symbol)) || \"\";\n                    (E('reward') as HTMLDivElement).innerHTML = (formatNumber(res.reward/Math.pow(10,res._pool.rewardTokenInfo.decimal)) + \" \"  + (res._pool.rewardTokenInfo.symbol || native(_chainid)?.symbol)) || \"\";\n                    (E('liquidity') as HTMLDivElement).innerHTML = (formatNumber(res._pool.liquidity/Math.pow(10,res._pool.rewardTokenInfo.decimal)) + \" \"  + (res._pool.rewardTokenInfo.symbol || native(_chainid)?.symbol)) || \"\";\n                    //show yield type value\n                    let ymsg: any;let _yield: any =  formatNumber(res._pool.yield / (Math.pow(10,res._pool.rewardTokenInfo.decimal * 1)))\n                    if(res._pool.yieldType == 1) {ymsg = _yield + \" units per 1\" + (res._pool.stakeTokenInfo.symbol || native(_chainid)?.symbol) + \" \"}else {ymsg = _yield + \"% \"}\n                    if(res._pool.yieldDuration == 1) {ymsg += \"daily yield\"}else if(res._pool.yieldDuration == 2) {ymsg += \"weekly yield\"}\n                    else if(res._pool.yieldDuration == 3) {ymsg += \"monthly yield\"}else if(res._pool.yieldDuration == 4) {ymsg += \"yearly yield\"}\n                    (E('stake_yield_benefit') as HTMLDivElement).innerHTML = ymsg;\n                    //show stake status\n                    if(res._pool.locked) {\n                      //show its locked\n                      (E('stake_info_head') as HTMLDivElement).innerHTML = \"<div class='stake_info_black'>Locked</div>\"\n                    }\n                    else if(res._pool.liquidity == 0){\n                      //show insufficient liquidity\n                      (E('stake_info_head') as HTMLDivElement).innerHTML = \"<div class='stake_info_red'>Insufficient liquidity pool</div>\"\n                    }\n                    else if(res.ended) {\n                      //show has ended\n                      (E('stake_info_head') as HTMLDivElement).innerHTML = \"<div class='stake_info_black'>Ended</div>\"\n                    }\n                    else { \n                      //show ending date\n                      (E('stake_info_head') as HTMLDivElement).innerHTML = \"<div class='stake_info_normal'>Ending at \" + (new Date(res._pool.time[1] * 1000).toLocaleDateString('en-us', { weekday:\"long\", year:\"numeric\", month:\"short\", day:\"numeric\"})) + \"</div>\"\n                    }\n                    //show the div\n                    (E('stake_info_head') as HTMLDivElement).style.display = \"\";\n                    //show edit stake pool if owner\n                    (res._pool.owner == _wallet)? (E('edit_stake') as HTMLDivElement).style.display = \"\" : (E('edit_stake') as HTMLDivElement).style.display = \"none\" ;\n                    _balance = bal / Math.pow(10,res._pool.stakeTokenInfo.decimal)\n                    rbalance = rbal / Math.pow(10,res._pool.rewardTokenInfo.decimal)\n                    _staked = res.totalStaked / Math.pow(10,res._pool.stakeTokenInfo.decimal)\n                    pool = res;\n                    //show conditional display\n                    showConditionalDisplay()\n                  }\n                })\n              }\n            })\n          })\n         .catch((err: any) => {\n            //retry again \n            setTimeout(() => {loadData()}, 500)\n         })\n      }\n      else {\n        alert('Staking pool not found')\n        window.location.href = \"#/stake\"\n      }\n    })\n    .catch((err :any) => {\n      //reload every 2 sec\n      setTimeout(() => {loadData()}, 2000)\n    })\n  }\n}\n\nconst getUserBalance = (_address: any) => {\n  let _Address: any = config.chains[_chainid] as unknown as JSON | null\n  if(_address != ZERO_ADDRESS) {\n    const token = new ethers.Contract(_address, abi.token, _ether);\n    return token.balanceOf(_wallet)\n    .then((_res: any)=> {  \n      return _res\n    })\n  }\n  else {  \n    //get the user native currency balance \n    return _ether.getBalance(_wallet)\n  }\n}\nconst getAllowed = (_tokenAddress: any) => {\n  let _Address: any = config.chains[_chainid] as unknown as JSON | null\n  if(_Address != null) {\n    if(_tokenAddress != ZERO_ADDRESS){\n      const token = new ethers.Contract(_tokenAddress, abi.token, _ether);\n      return token.allowance(_wallet,  _Address.stake  as any | \"\")\n      .then((_res: any)=> {  \n        return _res > 0\n      })\n    }else {\n      return Promise.resolve(true)\n    }\n  }else {\n    return false\n  }\n}\nconst grantPermission = () => {\n  let _Address: any = config.chains[_chainid] as unknown as JSON | null\n  if(_Address != null) {\n    let _stakeAddress: any = _Address.stake as any | \"\"\n    const signer = _ether.getSigner();\n    const token = new ethers.Contract(pool._pool.stakeTokenInfo.tokenAddress, abi.token, signer);\n   return token.approve(_stakeAddress,  Web3.utils.toWei('9000000000000000000'))\n   .then((_res: any)=> {  \n        return _res;      \n    })\n  }\n  else {return false}\n}\nconst stake = (_amount: any) => {\n  let _Address: any = config.chains[_chainid] as unknown as JSON | null\n  if(_Address != null) {\n    let _stakeAddress: any = _Address.stake as any | \"\"\n    const signer = _ether.getSigner();\n    const _stake = new ethers.Contract(_stakeAddress, abi.stake, signer);\n    console.log(Web3.utils.toWei(_amount + \"\", 'wei'))\n    if(pool._pool.stakeTokenInfo.tokenAddress == ZERO_ADDRESS) {\n        return _stake.stakePool(stakeId, Web3.utils.toWei(_amount + \"\", 'wei'), {value: Web3.utils.toWei(_amount + \"\", 'wei')})\n    }\n    else {\n      return _stake.stakePool(stakeId, Web3.utils.toWei(_amount + \"\", 'wei'))\n    }\n  }\n  else {return false}\n}\nconst unstake = (_amount: any) => {\n  let _Address: any = config.chains[_chainid] as unknown as JSON | null\n  if(_Address != null) {\n    let _stakeAddress: any = _Address.stake as any | \"\"\n    const signer = _ether.getSigner();\n    const _stake = new ethers.Contract(_stakeAddress, abi.stake, signer);\n    console.log(Web3.utils.toWei(_amount + \"\", 'wei'))\n    return _stake.unstake(stakeId, Web3.utils.toWei(_amount + \"\", 'wei'))\n  }\n  else {return false}\n}\nconst withdrawPool = () => {\n  let _Address: any = config.chains[_chainid] as unknown as JSON | null\n  if(_Address != null) {\n    let _stakeAddress: any = _Address.stake as any | \"\"\n    const signer = _ether.getSigner();\n    const _stake = new ethers.Contract(_stakeAddress, abi.stake, signer);\n    return _stake.withdraw(stakeId)\n  }\n  else {return false}\n}\nconst setInputAmount = (_amount: any) => {\n  let _amt;\n    if(_Option == 'stake'){\n      _amt = (_amount/100) * _balance\n    }\n    else{\n      _amt = (_amount/100) * _staked\n    }\n    const stake_input = document.getElementById('stake_input') as HTMLInputElement | null\n    if(stake_input != null) {\n      stake_input.value = _amt + \"\"\n    }\n}\nconst showEditPool = () => {\n  //to show the edit pool pane\n  showEditStake(pool._pool, rbalance)\n}\n//to show coditional display\nconst showConditionalDisplay = () => {\n  //to format display based on ceratin conditions\n  if(pool != null) {\n    //first with token and stake balance\n    const stake_reward_button = document.getElementById('stake_reward_button') as HTMLButtonElement\n    const stake_button = document.getElementById('stake_button') as HTMLButtonElement\n    const stake_amount = document.getElementById('stake_amount') as HTMLElement\n    if(_Option == 'stake') {\n      stake_amount.innerHTML = \"Balance : \" + (Intl.NumberFormat('en-US', {maximumSignificantDigits: 12}).format(_balance || \"\"));\n    }\n    else {\n      stake_amount.innerHTML = \"Staked : \" + (Intl.NumberFormat('en-US', {maximumSignificantDigits: 12}).format(_staked || \"\"));\n    }\n    //check if its locked\n    if(pool._pool.locked) {\n      //disable button only during staked\n      if(_Option == 'stake') {\n        stake_button.disabled = true  \n      }\n      else {\n        stake_button.disabled = false  \n        if(_buttonAct != \"transact\") {\n          stake_button.innerHTML = 'unstake'\n        }\n        else {\n          stake_button.innerHTML = '...'\n        }\n      }\n      //disbale the reward button\n      stake_reward_button.disabled = true\n    }\n    else if(pool._pool.liquidity == 0) {\n      //insufficient liquidity\n      if(_Option == 'stake') {\n        stake_button.disabled = true  \n      }\n      else {\n        stake_button.disabled = false  \n        if(_buttonAct != \"transact\") {\n          stake_button.innerHTML = 'unstake'\n        }\n        else {\n          stake_button.innerHTML = '...'\n        }\n      }\n      stake_reward_button.disabled = false\n    }\n    else if(pool.ended) {\n      //ended\n      if(_Option == 'stake') {\n        stake_button.disabled = true  \n      }\n      else {\n        stake_button.disabled = false  \n        if(_buttonAct != \"transact\") {\n          stake_button.innerHTML = 'unstake'\n        }\n        else {\n          stake_button.innerHTML = '...'\n        }\n      }\n      stake_reward_button.disabled = false\n    }\n    else {\n      //passed all\n      stake_button.disabled = false;stake_reward_button.disabled = false\n      if(_buttonAct == \"permission\") {\n         //show grant permision button\n         if(_Option == 'stake') {\n           stake_button.innerHTML = \"Grant access to \" + pool._pool.stakeTokenInfo.symbol\n         }\n         else {\n          stake_button.innerHTML = \"unstake\"\n         }\n      }\n      else if(_buttonAct == \"\") {\n        //show grant permision button\n        if(_Option == 'stake') {\n          stake_button.innerHTML = \"stake\"\n        }\n        else {\n         stake_button.innerHTML = \"unstake\"\n        }\n      }\n      else if(_buttonAct == 'transact') {\n        stake_button.disabled = true\n      }\n      if(_withdrawAct == 'transact') {\n        stake_reward_button.disabled = true\n      }\n      else {\n        stake_reward_button.innerHTML = 'withdraw reward'\n      }\n    }\n    //check if there is rewards\n    if(pool.reward > 0) {\n      stake_reward_button.style.display = \"\"\n    }\n    else {\n      stake_reward_button.style.display = \"none\"\n    }\n  }\n}\nconst Stake: React.FC<{}> = (): React.ReactElement => {\n  const { account, chainId, library} = useActiveWeb3React()\n  const tokens = useAllTokens();\n  const [isAllowed, setAllowed] = useState(false)\n  // toggle wallet when disconnected\n  const toggleWalletModal = useWalletModalToggle() \n  _ether = library;\n  useEffect(() => {\n    // Reset variables\n    _balance = 0; _staked = 0; _Option = \"stake\";\n    _buttonAct = \"\";_withdrawAct = \"\";allTokens = {};\n    viewNo = 0; pool = null;\n   });\n  onRender('stake_info_head', () => {\n    stakeId = G('id',\"\");\n    if(account != null && chainId != null && JSON.stringify(tokens) != '{}') { \n      if(_wallet != account || _chainid != chainId || JSON.stringify(allTokens) != JSON.stringify(tokens)) { \n         allTokens = tokens;_wallet = account; _chainid = chainId; \n          selectView(viewNo)\n          loadData()\n      }\n    }\n  })\n  const  buttonAction = () => {\n    //to run the button actions\n    //check the button actions\n    const stake_button = document.getElementById('stake_button') as HTMLButtonElement | null\n    const stake_input = document.getElementById('stake_input') as HTMLInputElement | null\n    if (_buttonAct == 'permission') {\n       if(stake_button != null) {\n          stake_button.disabled = true;stake_button.innerHTML = \"...\"; \n          let a: any = grantPermission();\n            if(a != false) {\n              showModalInfo(true);setModalMsg('Transacting');setModalStaus('')\n              stake_button.disabled = true; _buttonAct = 'transact'\n              a.then((tx: any) => { \n                if(tx.hash) {\n                    tx.wait()\n                    .then((res: any) => {\n                      stake_button.disabled = false; hideModalInfo(3000)\n                      if(res.status == 1) {\n                        setModalMsg(\"Permission granted\")\n                        setModalStaus('good')\n                        _buttonAct = \"\"\n                      }\n                      else{\n                        //transaction failed\n                        setModalStaus('error');setModalMsg(\"Transaction failed\")\n                        _buttonAct = \"permission\"\n                      }\n                      showConditionalDisplay()\n                    })\n                    .catch((err: any) => {\n                        _buttonAct = \"permission\"\n                        reset(err)\n                    })\n                    \n                  }\n              })\n              .catch ((err: any) => {\n                _buttonAct = \"permission\"\n                reset(err)\n              })\n            }     \n       }\n    }\n    else {\n      let func = null;\n      //for stake and unstake\n      if(_Option == 'stake') {func = stake}else{func = unstake}\n          //get the amount\n          if(stake_button != null && stake_input != null) {\n            let _amt: any; _amt = stake_input.value; \n            if(_amt > 0){\n              stake_button.disabled = true;  stake_button.innerHTML = \"...\";\n              showModalInfo(true);setModalMsg('Transacting');setModalStaus('')\n              stake_button.disabled = true; _buttonAct = 'transact'\n              func(toBig(_amt, pool._pool.stakeTokenInfo.decimal))\n              .then((tx: any) => {\n                if(tx.hash) {\n                  tx.wait()\n                  .then((res: any) => {\n                    stake_button.disabled = false; hideModalInfo(3000);_buttonAct = \"\"\n                      if(res.status == 1) {\n                        setModalMsg(\"Successfull\")\n                        setModalStaus('good')\n                        loadData()\n                      }\n                      else{\n                        //transaction failed\n                        setModalStaus('error');setModalMsg(\"Transaction failed\")\n                      }\n                      showConditionalDisplay()\n                   })\n                  .catch((err: any) => {  \n                      _buttonAct = \"\"\n                      reset(err)\n                  })\n                }\n              })\n              .catch((err: any) => {\n                _buttonAct = \"\"\n                reset(err)\n              })\n            }\n         }\n         \n    }\n    function reset(err: any) {  \n      setModalStaus('error')\n      setModalMsg(readErrorMessage(err));hideModalInfo();\n      if(stake_button != null) {stake_button.disabled = false}\n      showConditionalDisplay()\n    }\n  }\n  //hooking to New pool created\n  hasSavedNew(() => {  \n    onRender('stake_head_stake_img', () => {  \n      if(account != null && chainId != null) { \n        loadData()\n      }\n    })\n  })\n  //to withdraw rewards\n  const withdraw = () => {\n    const stake_reward_button = document.getElementById('stake_reward_button') as HTMLButtonElement | null\n    if(stake_reward_button != null) {\n      stake_reward_button.disabled = true;stake_reward_button.innerHTML = \"...\"; \n          let a: any = withdrawPool();\n            if(a != false) {\n              showModalInfo(true);setModalMsg('Transacting');setModalStaus('')\n              stake_reward_button.disabled = true; _withdrawAct = 'transact'\n              a.then((tx: any) => { \n                if(tx.hash) {\n                    tx.wait()\n                    .then((res: any) => {\n                      stake_reward_button.disabled = false; hideModalInfo(3000)\n                      if(res.status == 1) {\n                        setModalMsg(\"Reward sent to wallet\")\n                        setModalStaus('good')\n                        _withdrawAct = \"\"\n                        loadData()\n                      }\n                      else{\n                        //transaction failed\n                        setModalStaus('error');setModalMsg(\"Transaction failed\")\n                        _withdrawAct = \"\"\n                      }\n                      showConditionalDisplay()\n                    })\n                    .catch((err: any) => {\n                      _withdrawAct = \"\"\n                       reset(err)\n                    })\n                    \n                  }\n              })\n              .catch ((err: any) => {\n                _withdrawAct = \"\"\n                reset(err)\n              })\n            }     \n    }\n    function reset(err: any) {  \n      setModalStaus('error')\n      setModalMsg(readErrorMessage(err));hideModalInfo();\n      if(stake_reward_button != null) {stake_reward_button.disabled = false}\n      showConditionalDisplay()\n    }\n  }\n  return (\n    <>\n      <div className=\"bg-image\"></div>\n\n      <div className=\"dxstake\" >\n        <div className=\"stakeinnerContainer\">\n        <div className='stake_name_info' style={{display:'none'}}> <span id='stake_head_info'></span>\n          <img id='stake_head_stake_img' style={{marginLeft:'10px'}} />\n          <b id='stake_head_stake_name'></b><img id='stake_head_earn_img'/><b id='stake_head_earn_name'></b></div>\n          <div id='stake_info_head' className='stake centre' style={{background:'none', padding:'0px', display:'none', fontSize:'14px'}}>\n             \n          </div>\n\n          <div id='stake_body_view' className='stake' >\n          <div className=\"proposal-views\" id=\"proposal-views\">\n              <p onClick={() => selectView(0)} className=\"selected-proposal\">Stake</p>\n              <p onClick={() => selectView(1)}className=\"\">Unstake</p>\n\n              <button id='edit_stake' onClick={showEditPool} className='stake_edit_button center' style={{display:'none'}}>\n                  <span>Edit pool</span>\n              </button>\n          </div>\n          <div className=\"stake-proposal-box\" id=\"stake-box\">\n                <div className='stake-currency'>\n                    <span>Amount </span>\n                    <span id='stake_amount'>Balance </span>\n                </div>\n                <div className='stake-currency-1'>\n                    <input id='stake_input' placeholder='0.00'/>\n                    <span id='stake_coin_name'></span>\n                    <img id='stake_coin_img'/>\n                </div>\n                <div className='stake_yield_benefit'>\n                  <span id='stake_yield_benefit' style={{color:'limegreen'}}></span>\n                </div>\n          </div>\n          <div className='stake_percents'>\n            <button onClick={() => setInputAmount(25)}>25%</button>\n            <button onClick={() => setInputAmount(50)}>50%</button>\n            <button onClick={() => setInputAmount(75)}>75%</button>\n            <button onClick={() => setInputAmount(100)}>100%</button>\n          </div>\n          <div id='msg' className='proposal-msg-area proposal-msg-area-fail'>\n                \n          </div>\n          <div className='stake_buttons'>\n          {!account ? (\n                <ButtonPrimary onClick={toggleWalletModal}>Connect Wallet</ButtonPrimary>\n              ) : (\n                <ButtonPrimary onClick={buttonAction}  id='stake_button'>...</ButtonPrimary>\n              )}\n          </div>\n          </div>\n          \n          <div id='stake_info_bottom' className='stake'>\n            <StakeStatsContainer>\n            <VotingAddresses>\n              <p>Staking Addresses</p>\n              <span id='stakers'>\n                 \n              </span>\n            </VotingAddresses>\n            <VotingAddresses>\n              <p>Total staked</p>\n              <span id='total_staked'>\n                   \n              </span>\n            </VotingAddresses>\n            </StakeStatsContainer>\n\n            <StakeStatsContainer>\n            <VotingAddresses>\n              <p>Available Liquidity</p>\n              <span id='liquidity'>\n                  \n              </span>\n            </VotingAddresses>\n            <VotingAddresses>\n              <p>Reward earned</p>\n              <span id='reward'>\n                  \n              </span>\n            </VotingAddresses>\n            </StakeStatsContainer>\n            <div className='stake_buttons'>\n              <ButtonPrimary onClick={withdraw}  id='stake_reward_button'>Withdraw reward</ButtonPrimary>\n            </div>\n          </div>\n\n          <Save/>\n        </div>\n      </div>\n      \n    </>\n  )\n}\n\nexport default Stake\n"],"sourceRoot":""}